{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/layout/style\";\nimport _Layout from \"antd/es/layout\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport _classCallCheck from \"/home/nineleaps/Sattebaaz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nineleaps/Sattebaaz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nineleaps/Sattebaaz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nineleaps/Sattebaaz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nineleaps/Sattebaaz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nineleaps/Sattebaaz/src/App.js\";\nimport React from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { CSVLink } from 'react-csv';\nimport { constants, columns, csvHeaders } from './constants';\nimport { getURL, getSource, fmtFloat, lineChartOptions, lineChartWithPriceVolume, lineChartWithCloseVolume, barChartOptions, barChartWithVolumes, getMarketDataCSV, getOhlcvCSV, getBalanceCSV } from './util'; // Styles.\n\nimport './App.css';\nimport { CloudDownload } from '@material-ui/icons';\nimport * as data from './dummy.json';\nvar keyMerged = 'Merged';\nvar word = data['default']['data'];\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      ready: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        ready: true\n      });\n    }\n  }, {\n    key: \"getMarketDataRender\",\n    value: function getMarketDataRender() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 12\n        }\n      }, this.state.ready && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(_Table, {\n        size: \"small\",\n        style: {\n          minWidth: '1000px'\n        },\n        pagination: false,\n        rowKey: function rowKey(record) {\n          return record.category;\n        },\n        columns: columns.MarketData,\n        dataSource: word,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }), console.log(this.state.marketData), console.log(\"ye word hai\", word)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(_Layout, {\n        className: \"layout\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(_Layout.Header, {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          fontFamily: \"KrutiDev010\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, \"Sattebaaz\\uD83D\\uDE03\")), /*#__PURE__*/React.createElement(_Layout.Content, {\n        style: {\n          padding: '5vh 5vw 0vh 5vw',\n          backgroundColor: '#FFF',\n          minHeight: '70vh'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, this.state.ready ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, this.getMarketDataRender(), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      })) : /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }, \"Loading...\"), /*#__PURE__*/React.createElement(_Spin, {\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(_Layout.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, \"UI creator team TheBigShot\")));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/nineleaps/Sattebaaz/src/App.js"],"names":["React","Line","Bar","CSVLink","constants","columns","csvHeaders","getURL","getSource","fmtFloat","lineChartOptions","lineChartWithPriceVolume","lineChartWithCloseVolume","barChartOptions","barChartWithVolumes","getMarketDataCSV","getOhlcvCSV","getBalanceCSV","CloudDownload","data","keyMerged","word","App","state","ready","setState","minWidth","record","category","MarketData","console","log","marketData","textAlign","fontFamily","padding","backgroundColor","minHeight","getMarketDataRender","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Layout, Table, Row, Col, DatePicker, TimePicker, Spin } from 'antd'\nimport { Line, Bar } from 'react-chartjs-2'\nimport { CSVLink } from 'react-csv'\n\nimport { constants, columns, csvHeaders } from './constants'\nimport {\n  getURL, getSource, fmtFloat,\n  lineChartOptions, lineChartWithPriceVolume, lineChartWithCloseVolume,\n  barChartOptions, barChartWithVolumes,\n  getMarketDataCSV, getOhlcvCSV, getBalanceCSV } from './util'\n\n// Styles.\nimport './App.css'\nimport { CloudDownload } from '@material-ui/icons'\nimport * as data from './dummy.json';\nconst keyMerged = 'Merged'\nconst word = data['default']['data'];\nclass App extends React.Component {\n\n  state = {\n    ready: false,\n  };\n  componentWillMount () {\n    this.setState({ ready: true })\n  }\n\n  getMarketDataRender () {\n    return <div>\n      {this.state.ready &&\n      <div>\n        {/* <Row justify='center' type='flex'>\n          <Col span={4}><h3>Market Data</h3></Col>\n          <Col span={20}>\n            <DatePicker format='YYYY/MM/DD' onChange={(d, ds) => this.onSearchByTime(constants.key.marketData, true, ds)} />\n          </Col>\n        </Row>\n        <br /> */}\n        <Table\n          size='small'\n          style={{ minWidth: '1000px' }}\n          pagination={false}\n          rowKey={record => record.category}\n          columns={columns.MarketData}\n          dataSource={word}\n        />\n        {console.log(this.state.marketData)}\n        {console.log(\"ye word hai\",word)}\n        \n        \n      </div>\n      }\n    </div>\n  }\n  render () {\n    return (\n      <Layout className='layout'>\n        <Layout.Header style={{textAlign:\"center\"}}>\n          <h1 style={{fontFamily: \"KrutiDev010\"}}>Sattebaaz😃</h1>\n        </Layout.Header>\n        <Layout.Content style={{ padding: '5vh 5vw 0vh 5vw', backgroundColor: '#FFF', minHeight: '70vh' }}>\n          {this.state.ready\n            ? <div>\n              {this.getMarketDataRender()}\n              <br />\n            </div>\n            : <center>\n              <h1>Loading...</h1>\n              <Spin size='large' />\n            </center>\n          }\n        </Layout.Content>\n        <Layout.Footer>\n          <center>UI creator team TheBigShot</center>\n        </Layout.Footer>\n      </Layout>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}