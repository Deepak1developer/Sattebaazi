{"ast":null,"code":"import { constants } from '../constants';\n\nvar fetch = require('node-fetch');\n\nwindow.chartColors = {\n  red: 'rgb(255, 99, 132)',\n  orange: 'rgb(255, 159, 64)',\n  yellow: 'rgb(255, 205, 86)',\n  green: 'rgb(75, 192, 192)',\n  blue: 'rgb(54, 162, 235)',\n  lightBlue: 'rgb(151,187,205)',\n  purple: 'rgb(153, 102, 255)',\n  grey: 'rgb(201, 203, 207)'\n};\n\nvar getURL = function getURL(name) {\n  return \"https://raw.githubusercontent.com/\".concat(constants.organization, \"/\").concat(constants.repoName, \"/\").concat(constants.branch, \"/\").concat(constants.sourceFile[name]);\n};\n\nvar getSource = function getSource(name) {\n  return fetch(getURL(name)).then(function (response) {\n    return response.text();\n  });\n};\n\nvar lineChartOptions = function lineChartOptions(title) {\n  return {\n    responsive: true,\n    hoverMode: 'index',\n    stacked: false,\n    title: {\n      display: true,\n      text: title\n    },\n    scales: {\n      xAxes: [{\n        type: 'time',\n        display: true,\n        time: {\n          unit: 'day',\n          parser: 'YYYY-MM-DDTHH:mm:ss',\n          round: 'hour',\n          tooltipFormat: 'll HH:mm'\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Date'\n        },\n        ticks: {\n          major: {\n            fontStyle: 'bold',\n            fontColor: '#FF0000'\n          }\n        }\n      }],\n      yAxes: [{\n        type: 'linear',\n        // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n        display: true,\n        position: 'left',\n        id: 'y-axis-1'\n      }, {\n        type: 'linear',\n        // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n        display: true,\n        position: 'right',\n        id: 'y-axis-2',\n        // grid line settings\n        gridLines: {\n          drawOnChartArea: false // only want the grid lines for one axis to show up\n\n        }\n      }]\n    }\n  };\n};\n\nvar lineChartWithPriceVolume = function lineChartWithPriceVolume(labels, prices, volumes) {\n  // if (labels.length > 150) {\n  //   labels = labels.slice(labels.length -150, labels.length -1);\n  //   prices = prices.slice(prices.length -150, prices.length -1);\n  //   volumes = volumes.slice(volumes.length -150, volumes.length -1);\n  // }\n  return {\n    labels: labels,\n    datasets: [{\n      label: 'Price',\n      borderColor: window.chartColors.red,\n      backgroundColor: window.chartColors.red,\n      fill: false,\n      data: prices,\n      yAxisID: 'y-axis-1'\n    }, {\n      label: 'Volume',\n      borderColor: window.chartColors.lightBlue,\n      backgroundColor: window.chartColors.lightBlue,\n      fill: true,\n      data: volumes,\n      yAxisID: 'y-axis-2'\n    }]\n  };\n};\n\nvar lineChartWithCloseVolume = function lineChartWithCloseVolume(labels, closes, volumes) {\n  return {\n    labels: labels,\n    datasets: [{\n      label: 'Close',\n      borderColor: window.chartColors.red,\n      backgroundColor: window.chartColors.red,\n      fill: false,\n      data: closes,\n      yAxisID: 'y-axis-1'\n    }, {\n      label: 'Volume',\n      borderColor: window.chartColors.lightBlue,\n      backgroundColor: window.chartColors.lightBlue,\n      fill: true,\n      data: volumes,\n      yAxisID: 'y-axis-2'\n    }]\n  };\n};\n\nvar barChartOptions = function barChartOptions(title) {\n  return {\n    title: {\n      display: true,\n      text: title\n    },\n    tooltips: {\n      mode: 'index',\n      intersect: false\n    },\n    responsive: true,\n    scales: {\n      xAxes: [{\n        stacked: true\n      }],\n      yAxes: [{\n        stacked: true\n      }]\n    }\n  };\n};\n\nvar barChartWithVolumes = function barChartWithVolumes(volumes) {\n  return {\n    labels: Object.values(volumes).map(function (e) {\n      return e.date;\n    }),\n    datasets: [{\n      label: 'others',\n      backgroundColor: window.chartColors.grey,\n      data: Object.values(volumes).map(function (e) {\n        var remain = toFloat(e.volume) - toFloat(e.upbitVolume) - toFloat(e.bittrexVolume) - toFloat(e.abccVolume) - toFloat(e.kucoinVolume) - toFloat(e.coinsuperVolume);\n        return remain > 0 ? remain : 0;\n      })\n    }, {\n      label: 'upbit',\n      backgroundColor: window.chartColors.red,\n      data: Object.values(volumes).map(function (e) {\n        return toFloat(e.upbitVolume);\n      })\n    }, {\n      label: 'bittrex',\n      backgroundColor: window.chartColors.green,\n      data: Object.values(volumes).map(function (e) {\n        return toFloat(e.bittrexVolume);\n      })\n    }, {\n      label: 'abcc',\n      backgroundColor: window.chartColors.blue,\n      data: Object.values(volumes).map(function (e) {\n        return toFloat(e.abccVolume);\n      })\n    }, {\n      label: 'kucoin',\n      backgroundColor: window.chartColors.orange,\n      data: Object.values(volumes).map(function (e) {\n        return toFloat(e.kucoinVolume);\n      })\n    }, {\n      label: 'coinsuper',\n      backgroundColor: window.chartColors.yellow,\n      data: Object.values(volumes).map(function (e) {\n        return toFloat(e.coinsuperVolume);\n      })\n    }]\n  };\n};\n\nvar replaceAll = function replaceAll(str, searchStr, replaceStr) {\n  return str.split(searchStr).join(replaceStr);\n};\n\nvar fmtInt = function fmtInt(v) {\n  return v ? v.toLocaleString('en') : '0';\n};\n\nvar fmtFloat = function fmtFloat(v) {\n  return v ? parseFloat(Number(v).toFixed(8)).toString().replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1,') : 0;\n};\n\nvar toFloat = function toFloat(v) {\n  return v ? parseFloat(replaceAll(v, ',', '')) : 0;\n};\n\nvar numberFormat = function numberFormat(number, decimals, decPoint, thousandsSep) {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +     bugfix by: Michael White (http://getsprink.com)\n  // +     bugfix by: Benjamin Lupton\n  // +     bugfix by: Allan Jensen (http://www.winternet.no)\n  // +    revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // +     bugfix by: Howard Yeend\n  // +    revised by: Luke Smith (http://lucassmith.name)\n  // +     bugfix by: Diogo Resende\n  // +     bugfix by: Rival\n  // +      input by: Kheang Hok Chin (http://www.distantia.ca/)\n  // +   improved by: davook\n  // +   improved by: Brett Zamir (http://brett-zamir.me)\n  // +      input by: Jay Klehr\n  // +   improved by: Brett Zamir (http://brett-zamir.me)\n  // +      input by: Amir Habibi (http://www.residence-mixte.com/)\n  // +     bugfix by: Brett Zamir (http://brett-zamir.me)\n  // +   improved by: Theriault\n  // +   improved by: Drew Noakes\n  // *     example 1: number_format(1234.56);\n  // *     returns 1: '1,235'\n  // *     example 2: number_format(1234.56, 2, ',', ' ');\n  // *     returns 2: '1 234,56'\n  // *     example 3: number_format(1234.5678, 2, '.', '');\n  // *     returns 3: '1234.57'\n  // *     example 4: number_format(67, 2, ',', '.');\n  // *     returns 4: '67,00'\n  // *     example 5: number_format(1000);\n  // *     returns 5: '1,000'\n  // *     example 6: number_format(67.311, 2);\n  // *     returns 6: '67.31'\n  // *     example 7: number_format(1000.55, 1);\n  // *     returns 7: '1,000.6'\n  // *     example 8: number_format(67000, 5, ',', '.');\n  // *     returns 8: '67.000,00000'\n  // *     example 9: number_format(0.9, 0);\n  // *     returns 9: '1'\n  // *    example 10: number_format('1.20', 2);\n  // *    returns 10: '1.20'\n  // *    example 11: number_format('1.20', 4);\n  // *    returns 11: '1.2000'\n  // *    example 12: number_format('1.2000', 3);\n  // *    returns 12: '1.200'\n  var n = !isFinite(+number) ? 0 : +number;\n  var prec = !isFinite(+decimals) ? 0 : Math.abs(decimals);\n  var sep = typeof thousandsSep === 'undefined' ? ',' : thousandsSep;\n  var dec = typeof decPoint === 'undefined' ? '.' : decPoint;\n\n  var toFixedFix = function toFixedFix(n, prec) {\n    // Fix for IE parseFloat(0.55).toFixed(0) = 0\n    var k = Math.pow(10, prec);\n    return Math.round(n * k) / k;\n  };\n\n  var s = (prec ? toFixedFix(n, prec) : Math.round(n)).toString().split('.');\n\n  if (s[0].length > 3) {\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\n  }\n\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || '';\n    s[1] += new Array(prec - s[1].length + 1).join('0');\n  }\n\n  return s.join(dec);\n};\n\nvar getMarketDataCSV = function getMarketDataCSV(e) {\n  return {\n    category: e.market,\n    usdPrice: fmtFloat(e.quote.USD.price),\n    usdVolume: fmtFloat(e.quote.USD.volume_24h),\n    usdMarketCap: e.quote.USD.market_cap,\n    ethPrice: fmtFloat(e.quote.ETH.price),\n    ethVolume: fmtFloat(e.quote.ETH.volume_24h),\n    ethMarketCap: e.quote.ETH.market_cap,\n    btcPrice: fmtFloat(e.quote.BTC.price),\n    btcVolume: fmtFloat(e.quote.BTC.volume_24h),\n    btcMarketCap: e.quote.BTC.market_cap,\n    time: e.time\n  };\n};\n\nvar getOhlcvCSV = function getOhlcvCSV(e, md) {\n  var targetTime = Date.parse(e.ctime);\n  var ret = {\n    ctime: e.ctime,\n    date: e.ctime.split('T')[0],\n    unit: e.convert,\n    open: fmtFloat(e.quote.open),\n    high: fmtFloat(e.quote.high),\n    low: fmtFloat(e.quote.low),\n    close: fmtFloat(e.quote.close),\n    volume: fmtInt(e.quote.volume)\n  };\n  var capFound = md['CMC'].filter(function (v) {\n    return Date.parse(v.time) <= targetTime;\n  });\n  if (capFound && capFound.length) ret.marketCap = fmtFloat(capFound[0][e.convert.toLowerCase() + 'MarketCap']);\n  constants.target.markets.forEach(function (market) {\n    var found = md[market].filter(function (v) {\n      return Date.parse(v.time) <= targetTime;\n    });\n    if (found && found.length) ret[market + 'Volume'] = found[0][e.convert.toLowerCase() + 'Volume'];\n  });\n  return ret;\n};\n\nvar getBalanceCSV = function getBalanceCSV(e) {\n  return {\n    time: e.time,\n    exchange: e.exchange,\n    meta: numberFormat(e.meta, 8),\n    eth: numberFormat(e.eth, 8),\n    btc: numberFormat(e.btc, 8),\n    amount: numberFormat(e.amount, 8)\n  };\n};\n\nexport { getURL, getSource, fmtFloat, lineChartOptions, lineChartWithPriceVolume, lineChartWithCloseVolume, barChartOptions, barChartWithVolumes, getMarketDataCSV, getOhlcvCSV, getBalanceCSV };","map":{"version":3,"sources":["/home/nineleaps/coinmarketcap-react-chart/src/util/util.js"],"names":["constants","fetch","require","window","chartColors","red","orange","yellow","green","blue","lightBlue","purple","grey","getURL","name","organization","repoName","branch","sourceFile","getSource","then","response","text","lineChartOptions","title","responsive","hoverMode","stacked","display","scales","xAxes","type","time","unit","parser","round","tooltipFormat","scaleLabel","labelString","ticks","major","fontStyle","fontColor","yAxes","position","id","gridLines","drawOnChartArea","lineChartWithPriceVolume","labels","prices","volumes","datasets","label","borderColor","backgroundColor","fill","data","yAxisID","lineChartWithCloseVolume","closes","barChartOptions","tooltips","mode","intersect","barChartWithVolumes","Object","values","map","e","date","remain","toFloat","volume","upbitVolume","bittrexVolume","abccVolume","kucoinVolume","coinsuperVolume","replaceAll","str","searchStr","replaceStr","split","join","fmtInt","v","toLocaleString","fmtFloat","parseFloat","Number","toFixed","toString","replace","numberFormat","number","decimals","decPoint","thousandsSep","n","isFinite","prec","Math","abs","sep","dec","toFixedFix","k","pow","s","length","Array","getMarketDataCSV","category","market","usdPrice","quote","USD","price","usdVolume","volume_24h","usdMarketCap","market_cap","ethPrice","ETH","ethVolume","ethMarketCap","btcPrice","BTC","btcVolume","btcMarketCap","getOhlcvCSV","md","targetTime","Date","parse","ctime","ret","convert","open","high","low","close","capFound","filter","marketCap","toLowerCase","target","markets","forEach","found","getBalanceCSV","exchange","meta","eth","btc","amount"],"mappings":"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","sourcesContent":["import { constants } from '../constants'\n\nconst fetch = require('node-fetch')\n\nwindow.chartColors = {\n  red: 'rgb(255, 99, 132)',\n  orange: 'rgb(255, 159, 64)',\n  yellow: 'rgb(255, 205, 86)',\n  green: 'rgb(75, 192, 192)',\n  blue: 'rgb(54, 162, 235)',\n  lightBlue: 'rgb(151,187,205)',\n  purple: 'rgb(153, 102, 255)',\n  grey: 'rgb(201, 203, 207)'\n}\n\nconst getURL = (name) => {\n  return `https://raw.githubusercontent.com/${constants.organization}/${constants.repoName}/${constants.branch}/${\n    constants.sourceFile[name]\n  }`\n}\n\nconst getSource = (name) => {\n  return fetch(getURL(name)).then(response => response.text())\n}\n\nconst lineChartOptions = (title) => {\n  return {\n    responsive: true,\n    hoverMode: 'index',\n    stacked: false,\n    title: {\n      display: true,\n      text: title\n    },\n    scales: {\n      xAxes: [{\n        type: 'time',\n        display: true,\n        time: {\n          unit: 'day',\n          parser: 'YYYY-MM-DDTHH:mm:ss',\n          round: 'hour',\n          tooltipFormat: 'll HH:mm'\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Date'\n        },\n        ticks: {\n          major: {\n            fontStyle: 'bold',\n            fontColor: '#FF0000'\n          }\n        }\n      }],\n      yAxes: [{\n        type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n        display: true,\n        position: 'left',\n        id: 'y-axis-1'\n      }, {\n        type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n        display: true,\n        position: 'right',\n        id: 'y-axis-2',\n        // grid line settings\n        gridLines: {\n          drawOnChartArea: false // only want the grid lines for one axis to show up\n        }\n      }]\n    }\n  }\n}\n\nconst lineChartWithPriceVolume = (labels, prices, volumes) => {\n  // if (labels.length > 150) {\n  //   labels = labels.slice(labels.length -150, labels.length -1);\n  //   prices = prices.slice(prices.length -150, prices.length -1);\n  //   volumes = volumes.slice(volumes.length -150, volumes.length -1);\n  // }\n  return {\n    labels: labels,\n    datasets: [\n      {\n        label: 'Price',\n        borderColor: window.chartColors.red,\n        backgroundColor: window.chartColors.red,\n        fill: false,\n        data: prices,\n        yAxisID: 'y-axis-1'\n      },\n      {\n        label: 'Volume',\n        borderColor: window.chartColors.lightBlue,\n        backgroundColor: window.chartColors.lightBlue,\n        fill: true,\n        data: volumes,\n        yAxisID: 'y-axis-2'\n      }\n    ]\n  }\n}\n\nconst lineChartWithCloseVolume = (labels, closes, volumes) => {\n  return {\n    labels: labels,\n    datasets: [\n      {\n        label: 'Close',\n        borderColor: window.chartColors.red,\n        backgroundColor: window.chartColors.red,\n        fill: false,\n        data: closes,\n        yAxisID: 'y-axis-1'\n      },\n      {\n        label: 'Volume',\n        borderColor: window.chartColors.lightBlue,\n        backgroundColor: window.chartColors.lightBlue,\n        fill: true,\n        data: volumes,\n        yAxisID: 'y-axis-2'\n      }\n    ]\n  }\n}\n\nconst barChartOptions = (title) => {\n  return {\n    title: {\n      display: true,\n      text: title\n    },\n    tooltips: {\n      mode: 'index',\n      intersect: false\n    },\n    responsive: true,\n    scales: {\n      xAxes: [{\n        stacked: true\n      }],\n      yAxes: [{\n        stacked: true\n      }]\n    }\n  }\n}\n\nconst barChartWithVolumes = (volumes) => {\n  return {\n    labels: Object.values(volumes).map(e => e.date),\n    datasets: [\n      {\n        label: 'others',\n        backgroundColor: window.chartColors.grey,\n        data: Object.values(volumes).map(e => {\n          let remain = toFloat(e.volume) -\n            toFloat(e.upbitVolume) -\n            toFloat(e.bittrexVolume) -\n            toFloat(e.abccVolume) -\n            toFloat(e.kucoinVolume) -\n            toFloat(e.coinsuperVolume)\n          return remain > 0 ? remain : 0\n        })\n      },\n      {\n        label: 'upbit',\n        backgroundColor: window.chartColors.red,\n        data: Object.values(volumes).map(e => toFloat(e.upbitVolume))\n      },\n      {\n        label: 'bittrex',\n        backgroundColor: window.chartColors.green,\n        data: Object.values(volumes).map(e => toFloat(e.bittrexVolume))\n      },\n      {\n        label: 'abcc',\n        backgroundColor: window.chartColors.blue,\n        data: Object.values(volumes).map(e => toFloat(e.abccVolume))\n      },\n      {\n        label: 'kucoin',\n        backgroundColor: window.chartColors.orange,\n        data: Object.values(volumes).map(e => toFloat(e.kucoinVolume))\n      },\n      {\n        label: 'coinsuper',\n        backgroundColor: window.chartColors.yellow,\n        data: Object.values(volumes).map(e => toFloat(e.coinsuperVolume))\n      }\n    ]\n  }\n}\n\nconst replaceAll = (str, searchStr, replaceStr) => str.split(searchStr).join(replaceStr)\nconst fmtInt = v => v ? v.toLocaleString('en') : '0'\nconst fmtFloat = v => v ? parseFloat(Number(v).toFixed(8)).toString().replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1,') : 0\nconst toFloat = v => v ? parseFloat(replaceAll(v, ',', '')) : 0\n\nconst numberFormat = (number, decimals, decPoint, thousandsSep) => {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +     bugfix by: Michael White (http://getsprink.com)\n  // +     bugfix by: Benjamin Lupton\n  // +     bugfix by: Allan Jensen (http://www.winternet.no)\n  // +    revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // +     bugfix by: Howard Yeend\n  // +    revised by: Luke Smith (http://lucassmith.name)\n  // +     bugfix by: Diogo Resende\n  // +     bugfix by: Rival\n  // +      input by: Kheang Hok Chin (http://www.distantia.ca/)\n  // +   improved by: davook\n  // +   improved by: Brett Zamir (http://brett-zamir.me)\n  // +      input by: Jay Klehr\n  // +   improved by: Brett Zamir (http://brett-zamir.me)\n  // +      input by: Amir Habibi (http://www.residence-mixte.com/)\n  // +     bugfix by: Brett Zamir (http://brett-zamir.me)\n  // +   improved by: Theriault\n  // +   improved by: Drew Noakes\n  // *     example 1: number_format(1234.56);\n  // *     returns 1: '1,235'\n  // *     example 2: number_format(1234.56, 2, ',', ' ');\n  // *     returns 2: '1 234,56'\n  // *     example 3: number_format(1234.5678, 2, '.', '');\n  // *     returns 3: '1234.57'\n  // *     example 4: number_format(67, 2, ',', '.');\n  // *     returns 4: '67,00'\n  // *     example 5: number_format(1000);\n  // *     returns 5: '1,000'\n  // *     example 6: number_format(67.311, 2);\n  // *     returns 6: '67.31'\n  // *     example 7: number_format(1000.55, 1);\n  // *     returns 7: '1,000.6'\n  // *     example 8: number_format(67000, 5, ',', '.');\n  // *     returns 8: '67.000,00000'\n  // *     example 9: number_format(0.9, 0);\n  // *     returns 9: '1'\n  // *    example 10: number_format('1.20', 2);\n  // *    returns 10: '1.20'\n  // *    example 11: number_format('1.20', 4);\n  // *    returns 11: '1.2000'\n  // *    example 12: number_format('1.2000', 3);\n  // *    returns 12: '1.200'\n  var n = !isFinite(+number) ? 0 : +number\n  var prec = !isFinite(+decimals) ? 0 : Math.abs(decimals)\n  var sep = (typeof thousandsSep === 'undefined') ? ',' : thousandsSep\n  var dec = (typeof decPoint === 'undefined') ? '.' : decPoint\n\n  var toFixedFix = function (n, prec) {\n    // Fix for IE parseFloat(0.55).toFixed(0) = 0\n    var k = Math.pow(10, prec)\n    return Math.round(n * k) / k\n  }\n\n  var s = (prec ? toFixedFix(n, prec) : Math.round(n)).toString().split('.')\n  if (s[0].length > 3) {\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep)\n  }\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || ''\n    s[1] += new Array(prec - s[1].length + 1).join('0')\n  }\n  return s.join(dec)\n}\n\nconst getMarketDataCSV = e => {\n  return {\n    category: e.market,\n    usdPrice: fmtFloat(e.quote.USD.price),\n    usdVolume: fmtFloat(e.quote.USD.volume_24h),\n    usdMarketCap: e.quote.USD.market_cap,\n    ethPrice: fmtFloat(e.quote.ETH.price),\n    ethVolume: fmtFloat(e.quote.ETH.volume_24h),\n    ethMarketCap: e.quote.ETH.market_cap,\n    btcPrice: fmtFloat(e.quote.BTC.price),\n    btcVolume: fmtFloat(e.quote.BTC.volume_24h),\n    btcMarketCap: e.quote.BTC.market_cap,\n    time: e.time\n  }\n}\n\nconst getOhlcvCSV = (e, md) => {\n  let targetTime = Date.parse(e.ctime)\n  var ret = {\n    ctime: e.ctime,\n    date: e.ctime.split('T')[0],\n    unit: e.convert,\n    open: fmtFloat(e.quote.open),\n    high: fmtFloat(e.quote.high),\n    low: fmtFloat(e.quote.low),\n    close: fmtFloat(e.quote.close),\n    volume: fmtInt(e.quote.volume)\n  }\n  let capFound = md['CMC'].filter(v => Date.parse(v.time) <= targetTime)\n  if (capFound && capFound.length) ret.marketCap = fmtFloat(capFound[0][e.convert.toLowerCase() + 'MarketCap'])\n\n  constants.target.markets.forEach(market => {\n    let found = md[market].filter(v => Date.parse(v.time) <= targetTime)\n    if (found && found.length) ret[market + 'Volume'] = found[0][e.convert.toLowerCase() + 'Volume']\n  })\n  return ret\n}\n\nconst getBalanceCSV = e => {\n  return {\n    time: e.time,\n    exchange: e.exchange,\n    meta: numberFormat(e.meta, 8),\n    eth: numberFormat(e.eth, 8),\n    btc: numberFormat(e.btc, 8),\n    amount: numberFormat(e.amount, 8)\n  }\n}\n\nexport {\n  getURL,\n  getSource,\n  fmtFloat,\n  lineChartOptions,\n  lineChartWithPriceVolume,\n  lineChartWithCloseVolume,\n  barChartOptions,\n  barChartWithVolumes,\n  getMarketDataCSV,\n  getOhlcvCSV,\n  getBalanceCSV\n}\n"]},"metadata":{},"sourceType":"module"}