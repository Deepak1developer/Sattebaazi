{"ast":null,"code":"var constants = {}; // About remote source location\n\nconstants.organization = 'hexoul';\nconstants.repoName = 'go-cryptoinfo-gather';\nconstants.branch = 'master';\nconstants.sourceFile = {\n  report: 'report.log',\n  balance: 'balance.log',\n  trade: 'trade.log'\n}; // About target\n\nconstants.target = {\n  symbol: 'META',\n  quotes: ['USD', 'BTC', 'ETH'],\n  markets: ['bittrex', 'upbit', 'kucoin', 'abcc', 'coinsuper']\n}; // About keys\n\nconstants.key = {\n  tokenMetric: 'metric',\n  marketData: 'market',\n  ohlcvData: 'ohlcv',\n  balanceData: 'balance'\n}; // About gather\n\nconstants.gather = {\n  cryptoQuote: 'GatherCryptoQuote',\n  marketPairs: 'GatherExchangeMarketPairs',\n  tokenMetric: 'GatherTokenMetric',\n  ohlcv: 'GatherOhlcv',\n  balance: 'GatherBalance',\n  trade: 'GatherTrades'\n}; // About rendering\n\nconstants.dataUpdatePeriod = 5 * 60 * 1000; // 5 min\n\nexport { constants };","map":{"version":3,"sources":["/home/nineleaps/coinmarketcap-react-chart/src/constants/constants.js"],"names":["constants","organization","repoName","branch","sourceFile","report","balance","trade","target","symbol","quotes","markets","key","tokenMetric","marketData","ohlcvData","balanceData","gather","cryptoQuote","marketPairs","ohlcv","dataUpdatePeriod"],"mappings":"AAAA,IAAIA,SAAS,GAAG,EAAhB,C,CAEA;;AACAA,SAAS,CAACC,YAAV,GAAyB,QAAzB;AACAD,SAAS,CAACE,QAAV,GAAqB,sBAArB;AACAF,SAAS,CAACG,MAAV,GAAmB,QAAnB;AACAH,SAAS,CAACI,UAAV,GAAuB;AACrBC,EAAAA,MAAM,EAAE,YADa;AAErBC,EAAAA,OAAO,EAAE,aAFY;AAGrBC,EAAAA,KAAK,EAAE;AAHc,CAAvB,C,CAMA;;AACAP,SAAS,CAACQ,MAAV,GAAmB;AACjBC,EAAAA,MAAM,EAAE,MADS;AAEjBC,EAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAFS;AAGjBC,EAAAA,OAAO,EAAE,CAAC,SAAD,EAAY,OAAZ,EAAqB,QAArB,EAA+B,MAA/B,EAAuC,WAAvC;AAHQ,CAAnB,C,CAMA;;AACAX,SAAS,CAACY,GAAV,GAAgB;AACdC,EAAAA,WAAW,EAAE,QADC;AAEdC,EAAAA,UAAU,EAAE,QAFE;AAGdC,EAAAA,SAAS,EAAE,OAHG;AAIdC,EAAAA,WAAW,EAAE;AAJC,CAAhB,C,CAOA;;AACAhB,SAAS,CAACiB,MAAV,GAAmB;AACjBC,EAAAA,WAAW,EAAE,mBADI;AAEjBC,EAAAA,WAAW,EAAE,2BAFI;AAGjBN,EAAAA,WAAW,EAAE,mBAHI;AAIjBO,EAAAA,KAAK,EAAE,aAJU;AAKjBd,EAAAA,OAAO,EAAE,eALQ;AAMjBC,EAAAA,KAAK,EAAE;AANU,CAAnB,C,CASA;;AACAP,SAAS,CAACqB,gBAAV,GAA6B,IAAI,EAAJ,GAAS,IAAtC,C,CAA2C;;AAE3C,SAASrB,SAAT","sourcesContent":["let constants = {}\n\n// About remote source location\nconstants.organization = 'hexoul'\nconstants.repoName = 'go-cryptoinfo-gather'\nconstants.branch = 'master'\nconstants.sourceFile = {\n  report: 'report.log',\n  balance: 'balance.log',\n  trade: 'trade.log'\n}\n\n// About target\nconstants.target = {\n  symbol: 'META',\n  quotes: ['USD', 'BTC', 'ETH'],\n  markets: ['bittrex', 'upbit', 'kucoin', 'abcc', 'coinsuper']\n}\n\n// About keys\nconstants.key = {\n  tokenMetric: 'metric',\n  marketData: 'market',\n  ohlcvData: 'ohlcv',\n  balanceData: 'balance'\n}\n\n// About gather\nconstants.gather = {\n  cryptoQuote: 'GatherCryptoQuote',\n  marketPairs: 'GatherExchangeMarketPairs',\n  tokenMetric: 'GatherTokenMetric',\n  ohlcv: 'GatherOhlcv',\n  balance: 'GatherBalance',\n  trade: 'GatherTrades'\n}\n\n// About rendering\nconstants.dataUpdatePeriod = 5 * 60 * 1000 // 5 min\n\nexport { constants }\n"]},"metadata":{},"sourceType":"module"}