{"ast":null,"code":"import \"antd/es/layout/style\";\nimport _Layout from \"antd/es/layout\";\nimport \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/time-picker/style\";\nimport _TimePicker from \"antd/es/time-picker\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport _regeneratorRuntime from \"/home/nineleaps/coinmarketcap-react-chart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nineleaps/coinmarketcap-react-chart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/nineleaps/coinmarketcap-react-chart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nineleaps/coinmarketcap-react-chart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nineleaps/coinmarketcap-react-chart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nineleaps/coinmarketcap-react-chart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nineleaps/coinmarketcap-react-chart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nineleaps/coinmarketcap-react-chart/src/App.js\";\nimport React from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { CSVLink } from 'react-csv';\nimport { constants, columns, csvHeaders } from './constants';\nimport { getURL, getSource, fmtFloat, lineChartOptions, lineChartWithPriceVolume, lineChartWithCloseVolume, barChartOptions, barChartWithVolumes, getMarketDataCSV, getOhlcvCSV, getBalanceCSV } from './util'; // Styles.\n\nimport './App.css';\nimport { CloudDownload } from '@material-ui/icons';\nvar keyMerged = 'Merged';\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.data = {\n      origin: [],\n      balance: [],\n      trade: [],\n      chart: {},\n      csv: {\n        market: {},\n        ohlcv: {},\n        balance: {}\n      },\n      searchDate: {},\n      searchTime: {}\n    };\n    _this.state = {\n      ready: false,\n      readyBalanceCSV: false,\n      tokenMetric: [],\n      marketData: [],\n      ohlcvData: [],\n      balanceData: []\n    };\n\n    _this.onSearchByTime = function (target, isDate, dateStr) {\n      // Set date and time to search\n      if (isDate) _this.data.searchDate[target] = dateStr;else _this.data.searchTime[target] = dateStr;\n      if (target === constants.key.ohlcvData && _this.data.searchDate[target]) ;else if (!_this.data.searchDate[target] || !_this.data.searchTime[target]) return; // Search by given time\n\n      var searchTime = Date.parse(_this.data.searchDate[target] + ' ' + _this.data.searchTime[target]);\n\n      switch (target) {\n        // Filter and pick last one that is closest data point\n        case constants.key.tokenMetric:\n          var tokenMetric = _this.data.origin.filter(function (e) {\n            return e.msg === constants.gather.tokenMetric && Date.parse(e.time) <= searchTime;\n          });\n\n          if (tokenMetric.length > 0) tokenMetric = [tokenMetric[0]];\n\n          _this.setState({\n            tokenMetric: tokenMetric\n          });\n\n          break;\n\n        case constants.key.marketData:\n          // Market data is composed of both CMC and market\n          var marketData = [];\n          Object.keys(_this.data.csv.market).forEach(function (k) {\n            if (k === keyMerged) return;\n\n            var found = _this.data.csv.market[k].filter(function (v) {\n              return Date.parse(v.time) <= searchTime;\n            });\n\n            if (found.length > 0) marketData.push(found[0]);\n          });\n\n          _this.setState({\n            marketData: marketData\n          });\n\n          break;\n\n        case constants.key.ohlcvData:\n          searchTime = Date.parse(_this.data.searchDate[target]);\n          var ohlcvData = [];\n          Object.keys(_this.data.csv.ohlcv).forEach(function (k) {\n            if (k === keyMerged) return;\n\n            var found = _this.data.csv.ohlcv[k].filter(function (v) {\n              return Date.parse(v.date) <= searchTime;\n            });\n\n            if (found.length > 0) ohlcvData.push(found[0]);\n          });\n\n          _this.setState({\n            ohlcvData: ohlcvData\n          });\n\n          break;\n\n        case constants.key.balanceData:\n          var balanceData = [];\n          Object.keys(_this.data.csv.balance).forEach(function (k) {\n            if (k === keyMerged) return;\n\n            var found = _this.data.csv.balance[k].filter(function (v) {\n              return Date.parse(v.time) <= searchTime;\n            });\n\n            if (found.length > 0) balanceData.push(found[0]);\n          });\n\n          _this.setState({\n            balanceData: balanceData\n          });\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadReport\",\n    value: function () {\n      var _loadReport = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var ret, labels, prices, volumes, cLabel, cClose, cVolume, prevMonday, thisMonday, marketVolumes, tokenMetric, marketData, ohlcvData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.data.origin = [];\n                this.data.chart = {}; // Get source from remote repo\n\n                _context.next = 4;\n                return getSource('report');\n\n              case 4:\n                ret = _context.sent;\n                ret.split('\\n').forEach(function (line) {\n                  if (!line) return;\n\n                  _this2.data.origin.push(JSON.parse(line));\n                });\n\n                if (!(this.data.origin.length === 0)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 8:\n                // Reverse array to descending order for CSV and table\n                this.data.origin.sort(function (a, b) {\n                  return Date.parse(b.time) - Date.parse(a.time);\n                }); // --------------------------------- CSV ---------------------------------//\n                // Construct raw data for CSV of market data\n\n                this.data.csv.market[keyMerged] = [];\n                this.data.csv.market['CMC'] = this.data.origin.filter(function (e) {\n                  return e.msg === constants.gather.cryptoQuote && e.symbol === constants.target.symbol;\n                }).map(function (e) {\n                  e.market = 'CMC';\n                  return getMarketDataCSV(e);\n                });\n                constants.target.markets.forEach(function (market) {\n                  _this2.data.csv.market[market] = _this2.data.origin.filter(function (e) {\n                    return e.msg === constants.gather.marketPairs && e.symbol === constants.target.symbol && e.market === market;\n                  }).map(function (e) {\n                    return getMarketDataCSV(e);\n                  });\n                  _this2.data.csv.market[keyMerged] = _this2.data.csv.market[keyMerged].concat(_this2.data.csv.market[market]);\n                });\n                this.data.csv.market[keyMerged].sort(function (a, b) {\n                  return Date.parse(b.time) - Date.parse(a.time);\n                }); // Construct raw data for CSV of ohlcv\n\n                this.data.csv.ohlcv[keyMerged] = [];\n                constants.target.quotes.forEach(function (quote) {\n                  _this2.data.csv.ohlcv[quote] = _this2.data.origin.filter(function (e) {\n                    return e.msg === constants.gather.ohlcv && e.symbol === constants.target.symbol && e.convert === quote;\n                  }).map(function (e) {\n                    return getOhlcvCSV(e, _this2.data.csv.market);\n                  }).sort(function (a, b) {\n                    return Date.parse(b.date) - Date.parse(a.date);\n                  });\n                  _this2.data.csv.ohlcv[keyMerged] = _this2.data.csv.ohlcv[keyMerged].concat(_this2.data.csv.ohlcv[quote]);\n                });\n                this.data.csv.ohlcv[keyMerged].sort(function (a, b) {\n                  return Date.parse(b.date) - Date.parse(a.date);\n                }); // --------------------------------- Chart ---------------------------------//\n                // Construct raw data for price & volume chart\n\n                labels = {};\n                prices = {};\n                volumes = {};\n                constants.target.quotes.forEach(function (v) {\n                  labels[v] = [];\n                  prices[v] = [];\n                  volumes[v] = [];\n                });\n                this.data.origin.filter(function (e) {\n                  return e.msg === constants.gather.cryptoQuote && e.symbol === constants.target.symbol;\n                }).forEach(function (e) {\n                  constants.target.quotes.forEach(function (v) {\n                    labels[v].push(e.time);\n                    prices[v].push(e.quote[v].price);\n                    volumes[v].push(e.quote[v].volume_24h);\n                  });\n                });\n                constants.target.quotes.forEach(function (v) {\n                  _this2.data.chart[v] = lineChartWithPriceVolume(labels[v], prices[v], volumes[v]);\n                }); // Construct raw data for close chart\n\n                cLabel = [];\n                cClose = [];\n                cVolume = [];\n                prevMonday = new Date();\n                prevMonday.setDate(prevMonday.getDate() - 7 - (prevMonday.getDay() + 6) % 7);\n                prevMonday = new Date(prevMonday.getFullYear(), prevMonday.getMonth(), prevMonday.getDate(), 0, 0, 0);\n                prevMonday.setMinutes(prevMonday.getMinutes() + prevMonday.getTimezoneOffset());\n                thisMonday = new Date();\n                thisMonday.setDate(thisMonday.getDate() - (thisMonday.getDay() + 6) % 7);\n                thisMonday = new Date(thisMonday.getFullYear(), thisMonday.getMonth(), thisMonday.getDate(), 0, 0, 0);\n                thisMonday.setMinutes(thisMonday.getMinutes() + thisMonday.getTimezoneOffset());\n                this.data.origin.filter(function (e) {\n                  return e.msg === constants.gather.ohlcv && Date.parse(e.ctime) >= prevMonday.getTime() && Date.parse(e.ctime) < thisMonday.getTime() && e.symbol === constants.target.symbol && e.convert === 'USD';\n                }).forEach(function (e) {\n                  cLabel.push(e.ctime);\n                  cClose.push(e.quote.close);\n                  cVolume.push(e.quote.volume);\n                });\n                this.data.chart['close'] = lineChartWithCloseVolume(cLabel, cClose, cVolume); // Construct raw data for market volume chart\n\n                marketVolumes = this.data.csv.ohlcv['USD'].filter(function (e) {\n                  return Date.parse(e.ctime) >= prevMonday.getTime() && Date.parse(e.ctime) < thisMonday.getTime();\n                }).reverse();\n                this.data.chart['market'] = barChartWithVolumes(marketVolumes); // --------------------------------- Table ---------------------------------//\n                // Construct raw data for token metric table\n\n                tokenMetric = this.data.origin.filter(function (e) {\n                  return e.msg === constants.gather.tokenMetric && e.symbol === constants.target.symbol;\n                });\n                if (tokenMetric.length > 0) tokenMetric = tokenMetric.slice(0, 1); // Construct raw data for market data table\n\n                marketData = [];\n                Object.keys(this.data.csv.market).filter(function (k) {\n                  return k !== keyMerged;\n                }).forEach(function (k) {\n                  if (_this2.data.csv.market[k].length > 0) marketData.push(_this2.data.csv.market[k][0]);\n                }); // Construct raw data for ohlcv table\n\n                ohlcvData = [];\n                Object.keys(this.data.csv.ohlcv).filter(function (k) {\n                  return k !== keyMerged;\n                }).forEach(function (k) {\n                  if (_this2.data.csv.ohlcv[k].length > 0) ohlcvData.push(_this2.data.csv.ohlcv[k][0]);\n                });\n                this.setState({\n                  tokenMetric: tokenMetric,\n                  marketData: marketData,\n                  ohlcvData: ohlcvData\n                });\n\n              case 44:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadReport() {\n        return _loadReport.apply(this, arguments);\n      }\n\n      return loadReport;\n    }()\n  }, {\n    key: \"loadBalance\",\n    value: function () {\n      var _loadBalance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this3 = this;\n\n        var ret, balanceData;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.data.balance = []; // Get source from remote repo\n\n                _context2.next = 3;\n                return getSource('balance');\n\n              case 3:\n                ret = _context2.sent;\n                ret.split('\\n').forEach(function (line) {\n                  if (!line) return;\n\n                  _this3.data.balance.push(JSON.parse(line));\n                });\n\n                if (!(this.data.balance.length === 0)) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 7:\n                // --------------------------------- CSV ---------------------------------//\n                // Construct raw data for CSV of balance data\n                this.data.csv.balance[keyMerged] = [];\n                constants.target.markets.forEach(function (market) {\n                  _this3.data.csv.balance[market] = _this3.data.balance.filter(function (e) {\n                    return e.msg === constants.gather.balance && e.exchange === market;\n                  }).map(function (e) {\n                    return getBalanceCSV(e);\n                  }).sort(function (a, b) {\n                    return Date.parse(b.time) - Date.parse(a.time);\n                  });\n                  _this3.data.csv.balance[keyMerged] = _this3.data.csv.balance[keyMerged].concat(_this3.data.csv.balance[market]);\n                });\n                this.data.csv.balance[keyMerged].sort(function (a, b) {\n                  return Date.parse(b.time) - Date.parse(a.time);\n                }); // --------------------------------- Table ---------------------------------//\n                // Construct raw data for balance table\n\n                balanceData = [];\n                constants.target.markets.forEach(function (k) {\n                  if (_this3.data.csv.balance[k].length > 0) balanceData.push(_this3.data.csv.balance[k][0]);\n                });\n                this.setState({\n                  balanceData: balanceData\n                });\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBalance() {\n        return _loadBalance.apply(this, arguments);\n      }\n\n      return loadBalance;\n    }()\n  }, {\n    key: \"loadTrade\",\n    value: function () {\n      var _loadTrade = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this4 = this;\n\n        var ret, balanceData;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.data.trade = []; // Get source from remote repo\n\n                _context3.next = 3;\n                return getSource('trade');\n\n              case 3:\n                ret = _context3.sent;\n                ret.split('\\n').forEach(function (line) {\n                  if (!line) return;\n\n                  _this4.data.trade.push(JSON.parse(line));\n                });\n\n                if (!(this.data.trade.length === 0)) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 7:\n                this.data.trade = this.data.trade.filter(function (e) {\n                  return e.msg === constants.gather.trade;\n                }); // --------------------------------- Table ---------------------------------//\n                // Construct raw data for balance table\n\n                balanceData = [];\n                constants.target.markets.forEach(function (k) {\n                  if (_this4.data.csv.balance[k].length === 0) return;\n                  var last = _this4.data.csv.balance[k][0];\n                  var time = new Date(last.time).getTime();\n                  var prev24h = new Date(last.time);\n                  prev24h = prev24h.setDate(prev24h.getDate() - 1);\n                  last.amount = _this4.data.trade.filter(function (e) {\n                    return e.exchange === k && Date.parse(e.createdAt) >= prev24h && Date.parse(e.createdAt) <= time;\n                  }).reduce(function (acc, e) {\n                    return acc + e.amount;\n                  }, 0); // NOTE: DISABLED - Underestimate considering cross trading\n\n                  last.amount = fmtFloat(last.amount);\n                  if (_this4.data.csv.balance[k].length > 0) balanceData.push(last);\n                });\n                this.setState({\n                  balanceData: balanceData\n                });\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadTrade() {\n        return _loadTrade.apply(this, arguments);\n      }\n\n      return loadTrade;\n    }()\n  }, {\n    key: \"calcVolume\",\n    value: function () {\n      var _calcVolume = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var _this5 = this;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                constants.target.markets.forEach(function (k) {\n                  var kTrade = _this5.data.trade.filter(function (e) {\n                    return e.exchange === k;\n                  });\n\n                  var idx = 0;\n\n                  var func = function func() {\n                    var iter = 0;\n\n                    var _loop = function _loop() {\n                      var time = new Date(_this5.data.csv.balance[k][idx].time).getTime();\n                      var prev24h = new Date(_this5.data.csv.balance[k][idx].time);\n                      prev24h = prev24h.setDate(prev24h.getDate() - 1);\n                      _this5.data.csv.balance[k][idx].volume = kTrade.filter(function (e) {\n                        return Date.parse(e.createdAt) >= prev24h && Date.parse(e.createdAt) <= time;\n                      }).reduce(function (acc, e) {\n                        return acc + e.volume;\n                      }, 0); // Underestimate considering cross trading\n\n                      _this5.data.csv.balance[k][idx].volume /= 2;\n                      ++iter;\n                      ++idx;\n                    };\n\n                    while (idx < _this5.data.csv.balance[k].length && iter < 20) {\n                      _loop();\n                    }\n\n                    if (idx < _this5.data.csv.balance[k].length) setTimeout(func, 500);else _this5.setState({\n                      readyBalanceCSV: true\n                    });\n                  };\n\n                  func();\n                });\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function calcVolume() {\n        return _calcVolume.apply(this, arguments);\n      }\n\n      return calcVolume;\n    }()\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this6 = this;\n\n      var asyncLoading = [this.loadReport(), this.loadBalance().then(function () {\n        return _this6.loadTrade();\n      })];\n      Promise.all(asyncLoading).then(function () {\n        return _this6.setState({\n          ready: true\n        }, function () {\n          return _this6.calcVolume();\n        });\n      }); // Load raw data periodically\n      // this.interval = setInterval(() => {\n      //   this.setState({ ready: false });\n      //   Promise.all(asyncLoading).then(() => this.setState({ ready: true }, () => this.calcVolume()));\n      // }, constants.dataUpdatePeriod);\n    }\n  }, {\n    key: \"getTokenMetricRender\",\n    value: function getTokenMetricRender() {\n      var _this7 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 12\n        }\n      }, this.state.ready && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(_Row, {\n        justify: \"center\",\n        type: \"flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(_Col, {\n        span: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 25\n        }\n      }, \"Token Metric\")), /*#__PURE__*/React.createElement(_Col, {\n        span: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_DatePicker, {\n        format: \"YYYY/MM/DD\",\n        onChange: function onChange(d, ds) {\n          return _this7.onSearchByTime(constants.key.tokenMetric, true, ds);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(_Row, {\n        justify: \"center\",\n        type: \"flex\",\n        className: \"csvBg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(_Col, {\n        span: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }\n      }, \"CSV Download:\"), /*#__PURE__*/React.createElement(_Col, {\n        span: 20,\n        offset: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CSVLink, {\n        filename: \"token-metric.csv\",\n        headers: csvHeaders.tokenMetric,\n        data: this.data.origin.filter(function (e) {\n          return e.msg === constants.gather.tokenMetric && e.symbol === constants.target.symbol;\n        }),\n        className: \"csv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CloudDownload, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 15\n        }\n      }), \" Token metric\"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(_Table, {\n        size: \"small\",\n        style: {\n          minWidth: '500px',\n          maxWidth: '1000px'\n        },\n        pagination: false,\n        rowKey: function rowKey(record) {\n          return record.symbol;\n        },\n        columns: columns.TokenMetric,\n        dataSource: this.state.tokenMetric,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 9\n        }\n      })));\n    }\n  }, {\n    key: \"getMarketDataRender\",\n    value: function getMarketDataRender() {\n      var _this8 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 12\n        }\n      }, this.state.ready && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(_Row, {\n        justify: \"center\",\n        type: \"flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(_Col, {\n        span: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 25\n        }\n      }, \"Market Data\")), /*#__PURE__*/React.createElement(_Col, {\n        span: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_DatePicker, {\n        format: \"YYYY/MM/DD\",\n        onChange: function onChange(d, ds) {\n          return _this8.onSearchByTime(constants.key.marketData, true, ds);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }\n      }), ' ', /*#__PURE__*/React.createElement(_TimePicker, {\n        format: \"HH:mm:ss\",\n        onChange: function onChange(t, ts) {\n          return _this8.onSearchByTime(constants.key.marketData, false, ts);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 18\n        }\n      }))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(_Row, {\n        justify: \"center\",\n        type: \"flex\",\n        className: \"csvBg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(_Col, {\n        span: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }\n      }, \"CSV Download:\"), /*#__PURE__*/React.createElement(_Col, {\n        span: 20,\n        offset: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }\n      }, Object.keys(this.data.csv.market).map(function (market) {\n        return /*#__PURE__*/React.createElement(CSVLink, {\n          key: market,\n          filename: 'market-data-' + market + '.csv',\n          headers: csvHeaders.marketData,\n          data: _this8.data.csv.market[market],\n          className: \"csv\",\n          __self: _this8,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(CloudDownload, {\n          __self: _this8,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 19\n          }\n        }), \" \", market);\n      }))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(_Table, {\n        size: \"small\",\n        style: {\n          minWidth: '1000px'\n        },\n        pagination: false,\n        rowKey: function rowKey(record) {\n          return record.category;\n        },\n        columns: columns.MarketData,\n        dataSource: this.state.marketData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 9\n        }\n      })));\n    }\n  }, {\n    key: \"getOhlcvRender\",\n    value: function getOhlcvRender() {\n      var _this9 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 12\n        }\n      }, this.state.ready && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(_Row, {\n        justify: \"center\",\n        type: \"flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(_Col, {\n        span: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 25\n        }\n      }, \"OHLCV\")), /*#__PURE__*/React.createElement(_Col, {\n        span: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_DatePicker, {\n        format: \"YYYY/MM/DD\",\n        onChange: function onChange(d, ds) {\n          return _this9.onSearchByTime(constants.key.ohlcvData, true, ds);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(_Row, {\n        justify: \"center\",\n        type: \"flex\",\n        className: \"csvBg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(_Col, {\n        span: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }\n      }, \"CSV Download:\"), /*#__PURE__*/React.createElement(_Col, {\n        span: 20,\n        offset: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }\n      }, Object.keys(this.data.csv.ohlcv).map(function (quote) {\n        return /*#__PURE__*/React.createElement(CSVLink, {\n          key: quote,\n          filename: 'ohlcv-' + quote + '.csv',\n          headers: csvHeaders.ohlcvData,\n          data: _this9.data.csv.ohlcv[quote],\n          className: \"csv\",\n          __self: _this9,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(CloudDownload, {\n          __self: _this9,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 19\n          }\n        }), \" \", quote);\n      }))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(_Table, {\n        size: \"small\",\n        style: {\n          minWidth: '1700px'\n        },\n        pagination: false,\n        rowKey: function rowKey(record) {\n          return record.unit;\n        },\n        columns: columns.Ohlcv,\n        dataSource: this.state.ohlcvData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 9\n        }\n      })));\n    }\n  }, {\n    key: \"getBalanceRender\",\n    value: function getBalanceRender() {\n      var _this10 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 12\n        }\n      }, this.state.ready && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(_Row, {\n        justify: \"center\",\n        type: \"flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(_Col, {\n        span: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 25\n        }\n      }, \"Balance\")), /*#__PURE__*/React.createElement(_Col, {\n        span: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_DatePicker, {\n        format: \"YYYY/MM/DD\",\n        onChange: function onChange(d, ds) {\n          return _this10.onSearchByTime(constants.key.balanceData, true, ds);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }\n      }), ' ', /*#__PURE__*/React.createElement(_TimePicker, {\n        format: \"HH:mm:ss\",\n        onChange: function onChange(t, ts) {\n          return _this10.onSearchByTime(constants.key.balanceData, false, ts);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 18\n        }\n      }))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(_Row, {\n        justify: \"center\",\n        type: \"flex\",\n        className: \"csvBg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(_Col, {\n        span: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }\n      }, \"CSV Download:\"), /*#__PURE__*/React.createElement(_Col, {\n        span: 20,\n        offset: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }\n      }, this.state.readyBalanceCSV ? Object.keys(this.data.csv.balance).map(function (quote) {\n        return /*#__PURE__*/React.createElement(CSVLink, {\n          key: quote,\n          filename: 'balance-' + quote + '.csv',\n          headers: csvHeaders.balanceData,\n          data: _this10.data.csv.balance[quote],\n          className: \"csv\",\n          __self: _this10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(CloudDownload, {\n          __self: _this10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 19\n          }\n        }), \" \", quote);\n      }) : /*#__PURE__*/React.createElement(_Spin, {\n        size: \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(_Table, {\n        size: \"small\",\n        style: {\n          minWidth: '1000px'\n        },\n        pagination: false,\n        rowKey: function rowKey(record) {\n          return record.exchange;\n        },\n        columns: columns.Balance,\n        dataSource: this.state.balanceData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 9\n        }\n      })));\n    }\n  }, {\n    key: \"getChartRender\",\n    value: function getChartRender() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 7\n        }\n      }, \"Chart\"), this.state.ready && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(_Row, {\n        style: {\n          minWidth: '600px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_Col, {\n        span: 23,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Line, {\n        data: this.data.chart[constants.target.quotes[0]],\n        options: lineChartOptions(constants.target.symbol + '/' + constants.target.quotes[0] + ' Price & Volume'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(_Row, {\n        style: {\n          minWidth: '800px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_Col, {\n        span: 11,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Line, {\n        data: this.data.chart['close'],\n        options: lineChartOptions('Weekly close & volume (unit: USD)'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(_Col, {\n        span: 11,\n        offset: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Bar, {\n        data: this.data.chart['market'],\n        options: barChartOptions('Weekly market volume (unit: USD)'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(_Layout, {\n        className: \"layout\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(_Layout.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 9\n        }\n      }, \"Header\"), /*#__PURE__*/React.createElement(_Layout.Content, {\n        style: {\n          padding: '5vh 5vw 0vh 5vw',\n          backgroundColor: '#fff',\n          minHeight: '70vh'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 9\n        }\n      }, this.state.ready ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 15\n        }\n      }, this.getTokenMetricRender(), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 15\n        }\n      }), this.getMarketDataRender(), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 15\n        }\n      }), this.getOhlcvRender(), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 15\n        }\n      }), this.getBalanceRender(), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 15\n        }\n      }), this.getChartRender()) : /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 15\n        }\n      }, \"Loading...\"), /*#__PURE__*/React.createElement(_Spin, {\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(_Layout.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 11\n        }\n      }, \"Raw data: \", /*#__PURE__*/React.createElement(\"a\", {\n        href: getURL('report'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 25\n        }\n      }, \"Report\"), \" / \", /*#__PURE__*/React.createElement(\"a\", {\n        href: getURL('balance'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 65\n        }\n      }, \"Balance\"), \" / \", /*#__PURE__*/React.createElement(\"a\", {\n        href: getURL('trade'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 107\n        }\n      }, \"Trade\")), /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }\n      }, \"coinmarketcap-react-chart \\xA92018 Created by hexoul\")));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/nineleaps/coinmarketcap-react-chart/src/App.js"],"names":["React","Line","Bar","CSVLink","constants","columns","csvHeaders","getURL","getSource","fmtFloat","lineChartOptions","lineChartWithPriceVolume","lineChartWithCloseVolume","barChartOptions","barChartWithVolumes","getMarketDataCSV","getOhlcvCSV","getBalanceCSV","CloudDownload","keyMerged","App","data","origin","balance","trade","chart","csv","market","ohlcv","searchDate","searchTime","state","ready","readyBalanceCSV","tokenMetric","marketData","ohlcvData","balanceData","onSearchByTime","target","isDate","dateStr","key","Date","parse","filter","e","msg","gather","time","length","setState","Object","keys","forEach","k","found","v","push","date","ret","split","line","JSON","sort","a","b","cryptoQuote","symbol","map","markets","marketPairs","concat","quotes","quote","convert","labels","prices","volumes","price","volume_24h","cLabel","cClose","cVolume","prevMonday","setDate","getDate","getDay","getFullYear","getMonth","setMinutes","getMinutes","getTimezoneOffset","thisMonday","ctime","getTime","close","volume","marketVolumes","reverse","slice","exchange","last","prev24h","amount","createdAt","reduce","acc","kTrade","idx","func","iter","setTimeout","asyncLoading","loadReport","loadBalance","then","loadTrade","Promise","all","calcVolume","d","ds","minWidth","maxWidth","record","TokenMetric","t","ts","category","MarketData","unit","Ohlcv","Balance","padding","backgroundColor","minHeight","getTokenMetricRender","getMarketDataRender","getOhlcvRender","getBalanceRender","getChartRender","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Layout, Table, Row, Col, DatePicker, TimePicker, Spin } from 'antd'\nimport { Line, Bar } from 'react-chartjs-2'\nimport { CSVLink } from 'react-csv'\n\nimport { constants, columns, csvHeaders } from './constants'\nimport {\n  getURL, getSource, fmtFloat,\n  lineChartOptions, lineChartWithPriceVolume, lineChartWithCloseVolume,\n  barChartOptions, barChartWithVolumes,\n  getMarketDataCSV, getOhlcvCSV, getBalanceCSV } from './util'\n\n// Styles.\nimport './App.css'\nimport { CloudDownload } from '@material-ui/icons'\n\nconst keyMerged = 'Merged'\n\nclass App extends React.Component {\n  data = {\n    origin: [],\n    balance: [],\n    trade: [],\n    chart: {},\n    csv: {\n      market: {},\n      ohlcv: {},\n      balance: {}\n    },\n    searchDate: {},\n    searchTime: {}\n  };\n\n  state = {\n    ready: false,\n    readyBalanceCSV: false,\n    tokenMetric: [],\n    marketData: [],\n    ohlcvData: [],\n    balanceData: []\n  };\n\n  async loadReport () {\n    this.data.origin = []\n    this.data.chart = {}\n\n    // Get source from remote repo\n    let ret = await getSource('report')\n    ret.split('\\n').forEach(line => {\n      if (!line) return\n      this.data.origin.push(JSON.parse(line))\n    })\n    if (this.data.origin.length === 0) return\n\n    // Reverse array to descending order for CSV and table\n    this.data.origin.sort((a, b) => Date.parse(b.time) - Date.parse(a.time))\n\n    // --------------------------------- CSV ---------------------------------//\n    // Construct raw data for CSV of market data\n    this.data.csv.market[keyMerged] = []\n    this.data.csv.market['CMC'] = this.data.origin\n      .filter(e => e.msg === constants.gather.cryptoQuote && e.symbol === constants.target.symbol)\n      .map(e => { e.market = 'CMC'; return getMarketDataCSV(e) })\n    constants.target.markets.forEach(market => {\n      this.data.csv.market[market] = this.data.origin\n        .filter(e => e.msg === constants.gather.marketPairs &&\n                e.symbol === constants.target.symbol &&\n                e.market === market)\n        .map(e => getMarketDataCSV(e))\n      this.data.csv.market[keyMerged] = this.data.csv.market[keyMerged].concat(this.data.csv.market[market])\n    })\n    this.data.csv.market[keyMerged].sort((a, b) => Date.parse(b.time) - Date.parse(a.time))\n\n    // Construct raw data for CSV of ohlcv\n    this.data.csv.ohlcv[keyMerged] = []\n    constants.target.quotes.forEach(quote => {\n      this.data.csv.ohlcv[quote] = this.data.origin\n        .filter(e => e.msg === constants.gather.ohlcv &&\n                e.symbol === constants.target.symbol &&\n                e.convert === quote)\n        .map(e => getOhlcvCSV(e, this.data.csv.market))\n        .sort((a, b) => Date.parse(b.date) - Date.parse(a.date))\n      this.data.csv.ohlcv[keyMerged] = this.data.csv.ohlcv[keyMerged].concat(this.data.csv.ohlcv[quote])\n    })\n    this.data.csv.ohlcv[keyMerged].sort((a, b) => Date.parse(b.date) - Date.parse(a.date))\n\n    // --------------------------------- Chart ---------------------------------//\n    // Construct raw data for price & volume chart\n    var labels = {}; var prices = {}; var volumes = {}\n    constants.target.quotes.forEach(v => { labels[v] = []; prices[v] = []; volumes[v] = [] })\n    this.data.origin\n      .filter(e => e.msg === constants.gather.cryptoQuote && e.symbol === constants.target.symbol)\n      .forEach(e => {\n        constants.target.quotes.forEach(v => {\n          labels[v].push(e.time)\n          prices[v].push(e.quote[v].price)\n          volumes[v].push(e.quote[v].volume_24h)\n        })\n      })\n    constants.target.quotes.forEach(v => {\n      this.data.chart[v] = lineChartWithPriceVolume(labels[v], prices[v], volumes[v])\n    })\n\n    // Construct raw data for close chart\n    var cLabel = []; var cClose = []; var cVolume = []\n    var prevMonday = new Date()\n    prevMonday.setDate(prevMonday.getDate() - 7 - (prevMonday.getDay() + 6) % 7)\n    prevMonday = new Date(prevMonday.getFullYear(), prevMonday.getMonth(), prevMonday.getDate(), 0, 0, 0)\n    prevMonday.setMinutes(prevMonday.getMinutes() + prevMonday.getTimezoneOffset())\n    var thisMonday = new Date()\n    thisMonday.setDate(thisMonday.getDate() - (thisMonday.getDay() + 6) % 7)\n    thisMonday = new Date(thisMonday.getFullYear(), thisMonday.getMonth(), thisMonday.getDate(), 0, 0, 0)\n    thisMonday.setMinutes(thisMonday.getMinutes() + thisMonday.getTimezoneOffset())\n    this.data.origin\n      .filter(e => e.msg === constants.gather.ohlcv &&\n              Date.parse(e.ctime) >= prevMonday.getTime() &&\n              Date.parse(e.ctime) < thisMonday.getTime() &&\n              e.symbol === constants.target.symbol &&\n              e.convert === 'USD')\n      .forEach(e => {\n        cLabel.push(e.ctime)\n        cClose.push(e.quote.close)\n        cVolume.push(e.quote.volume)\n      })\n    this.data.chart['close'] = lineChartWithCloseVolume(cLabel, cClose, cVolume)\n\n    // Construct raw data for market volume chart\n    var marketVolumes = this.data.csv.ohlcv['USD']\n      .filter(e => Date.parse(e.ctime) >= prevMonday.getTime() &&\n              Date.parse(e.ctime) < thisMonday.getTime())\n      .reverse()\n    this.data.chart['market'] = barChartWithVolumes(marketVolumes)\n\n    // --------------------------------- Table ---------------------------------//\n    // Construct raw data for token metric table\n    var tokenMetric = this.data.origin.filter(e => e.msg === constants.gather.tokenMetric && e.symbol === constants.target.symbol)\n    if (tokenMetric.length > 0) tokenMetric = tokenMetric.slice(0, 1)\n\n    // Construct raw data for market data table\n    var marketData = []\n    Object.keys(this.data.csv.market).filter(k => k !== keyMerged).forEach(k => {\n      if (this.data.csv.market[k].length > 0) marketData.push(this.data.csv.market[k][0])\n    })\n\n    // Construct raw data for ohlcv table\n    var ohlcvData = []\n    Object.keys(this.data.csv.ohlcv).filter(k => k !== keyMerged).forEach(k => {\n      if (this.data.csv.ohlcv[k].length > 0) ohlcvData.push(this.data.csv.ohlcv[k][0])\n    })\n\n    this.setState({ tokenMetric: tokenMetric, marketData: marketData, ohlcvData: ohlcvData })\n  }\n\n  async loadBalance () {\n    this.data.balance = []\n\n    // Get source from remote repo\n    let ret = await getSource('balance')\n    ret.split('\\n').forEach(line => {\n      if (!line) return\n      this.data.balance.push(JSON.parse(line))\n    })\n    if (this.data.balance.length === 0) return\n\n    // --------------------------------- CSV ---------------------------------//\n    // Construct raw data for CSV of balance data\n    this.data.csv.balance[keyMerged] = []\n    constants.target.markets.forEach(market => {\n      this.data.csv.balance[market] = this.data.balance\n        .filter(e => e.msg === constants.gather.balance &&\n                e.exchange === market)\n        .map(e => getBalanceCSV(e))\n        .sort((a, b) => Date.parse(b.time) - Date.parse(a.time))\n      this.data.csv.balance[keyMerged] = this.data.csv.balance[keyMerged].concat(this.data.csv.balance[market])\n    })\n    this.data.csv.balance[keyMerged].sort((a, b) => Date.parse(b.time) - Date.parse(a.time))\n\n    // --------------------------------- Table ---------------------------------//\n    // Construct raw data for balance table\n    var balanceData = []\n    constants.target.markets.forEach(k => {\n      if (this.data.csv.balance[k].length > 0) balanceData.push(this.data.csv.balance[k][0])\n    })\n\n    this.setState({ balanceData: balanceData })\n  }\n\n  async loadTrade () {\n    this.data.trade = []\n\n    // Get source from remote repo\n    let ret = await getSource('trade')\n    ret.split('\\n').forEach(line => {\n      if (!line) return\n      this.data.trade.push(JSON.parse(line))\n    })\n    if (this.data.trade.length === 0) return\n\n    this.data.trade = this.data.trade.filter(e => e.msg === constants.gather.trade)\n\n    // --------------------------------- Table ---------------------------------//\n    // Construct raw data for balance table\n    var balanceData = []\n    constants.target.markets.forEach(k => {\n      if (this.data.csv.balance[k].length === 0) return\n      let last = this.data.csv.balance[k][0]\n      let time = new Date(last.time).getTime()\n      let prev24h = new Date(last.time)\n      prev24h = prev24h.setDate(prev24h.getDate() - 1)\n      last.amount = this.data.trade\n        .filter(e => e.exchange === k &&\n                            Date.parse(e.createdAt) >= prev24h &&\n                            Date.parse(e.createdAt) <= time)\n        .reduce((acc, e) => acc + e.amount, 0)\n      // NOTE: DISABLED - Underestimate considering cross trading\n      last.amount = fmtFloat(last.amount)\n      if (this.data.csv.balance[k].length > 0) balanceData.push(last)\n    })\n\n    this.setState({ balanceData: balanceData })\n  }\n\n  async calcVolume () {\n    constants.target.markets.forEach(k => {\n      var kTrade = this.data.trade.filter(e => e.exchange === k)\n      var idx = 0\n      var func = () => {\n        let iter = 0\n        while (idx < this.data.csv.balance[k].length && iter < 20) {\n          let time = new Date(this.data.csv.balance[k][idx].time).getTime()\n          let prev24h = new Date(this.data.csv.balance[k][idx].time)\n          prev24h = prev24h.setDate(prev24h.getDate() - 1)\n          this.data.csv.balance[k][idx].volume = kTrade\n            .filter(e => Date.parse(e.createdAt) >= prev24h &&\n                              Date.parse(e.createdAt) <= time)\n            .reduce((acc, e) => acc + e.volume, 0)\n          // Underestimate considering cross trading\n          this.data.csv.balance[k][idx].volume /= 2\n          ++iter\n          ++idx\n        }\n        if (idx < this.data.csv.balance[k].length) setTimeout(func, 500)\n        else this.setState({ readyBalanceCSV: true })\n      }\n      func()\n    })\n  }\n\n  componentWillMount () {\n    var asyncLoading = [this.loadReport(), this.loadBalance().then(() => this.loadTrade())]\n    Promise.all(asyncLoading).then(() => this.setState({ ready: true }, () => this.calcVolume()))\n\n    // Load raw data periodically\n\n    // this.interval = setInterval(() => {\n    //   this.setState({ ready: false });\n    //   Promise.all(asyncLoading).then(() => this.setState({ ready: true }, () => this.calcVolume()));\n    // }, constants.dataUpdatePeriod);\n  }\n\n  onSearchByTime = (target, isDate, dateStr) => {\n    // Set date and time to search\n    if (isDate) this.data.searchDate[target] = dateStr\n    else this.data.searchTime[target] = dateStr\n\n    if (target === constants.key.ohlcvData && this.data.searchDate[target]);\n    else if (!this.data.searchDate[target] || !this.data.searchTime[target]) return\n\n    // Search by given time\n    let searchTime = Date.parse(this.data.searchDate[target] + ' ' + this.data.searchTime[target])\n    switch (target) {\n      // Filter and pick last one that is closest data point\n      case constants.key.tokenMetric:\n        var tokenMetric = this.data.origin.filter(e => e.msg === constants.gather.tokenMetric && Date.parse(e.time) <= searchTime)\n        if (tokenMetric.length > 0) tokenMetric = [tokenMetric[0]]\n        this.setState({ tokenMetric: tokenMetric })\n        break\n      case constants.key.marketData:\n        // Market data is composed of both CMC and market\n        var marketData = []\n        Object.keys(this.data.csv.market).forEach(k => {\n          if (k === keyMerged) return\n          var found = this.data.csv.market[k].filter(v => Date.parse(v.time) <= searchTime)\n          if (found.length > 0) marketData.push(found[0])\n        })\n        this.setState({ marketData: marketData })\n        break\n      case constants.key.ohlcvData:\n        searchTime = Date.parse(this.data.searchDate[target])\n        var ohlcvData = []\n        Object.keys(this.data.csv.ohlcv).forEach(k => {\n          if (k === keyMerged) return\n          var found = this.data.csv.ohlcv[k].filter(v => Date.parse(v.date) <= searchTime)\n          if (found.length > 0) ohlcvData.push(found[0])\n        })\n        this.setState({ ohlcvData: ohlcvData })\n        break\n      case constants.key.balanceData:\n        var balanceData = []\n        Object.keys(this.data.csv.balance).forEach(k => {\n          if (k === keyMerged) return\n          var found = this.data.csv.balance[k].filter(v => Date.parse(v.time) <= searchTime)\n          if (found.length > 0) balanceData.push(found[0])\n        })\n        this.setState({ balanceData: balanceData })\n        break\n      default: break\n    }\n  }\n\n  getTokenMetricRender () {\n    return <div>\n      {this.state.ready &&\n      <div>\n        <Row justify='center' type='flex'>\n          <Col span={4}><h3>Token Metric</h3></Col>\n          <Col span={20}>\n            <DatePicker format='YYYY/MM/DD' onChange={(d, ds) => this.onSearchByTime(constants.key.tokenMetric, true, ds)} />\n          </Col>\n        </Row>\n        <br />\n        <Row justify='center' type='flex' className='csvBg'>\n          <Col span={2}>\n            CSV Download:\n          </Col>\n          <Col span={20} offset={1}>\n            <CSVLink\n              filename='token-metric.csv'\n              headers={csvHeaders.tokenMetric}\n              data={this.data.origin.filter(e => e.msg === constants.gather.tokenMetric && e.symbol === constants.target.symbol)}\n              className='csv'\n            >\n              <CloudDownload /> Token metric\n            </CSVLink>\n          </Col>\n        </Row>\n        <br />\n        <Table\n          size='small'\n          style={{ minWidth: '500px', maxWidth: '1000px' }}\n          pagination={false}\n          rowKey={record => record.symbol}\n          columns={columns.TokenMetric}\n          dataSource={this.state.tokenMetric}\n        />\n      </div>\n      }\n    </div>\n  }\n\n  getMarketDataRender () {\n    return <div>\n      {this.state.ready &&\n      <div>\n        <Row justify='center' type='flex'>\n          <Col span={4}><h3>Market Data</h3></Col>\n          <Col span={20}>\n            <DatePicker format='YYYY/MM/DD' onChange={(d, ds) => this.onSearchByTime(constants.key.marketData, true, ds)} />\n            {' '}<TimePicker format='HH:mm:ss' onChange={(t, ts) => this.onSearchByTime(constants.key.marketData, false, ts)} />\n          </Col>\n        </Row>\n        <br />\n        <Row justify='center' type='flex' className='csvBg'>\n          <Col span={2}>\n            CSV Download:\n          </Col>\n          <Col span={20} offset={1}>\n            {\n              Object.keys(this.data.csv.market).map(market => {\n                return <CSVLink\n                  key={market}\n                  filename={'market-data-' + market + '.csv'}\n                  headers={csvHeaders.marketData}\n                  data={this.data.csv.market[market]}\n                  className='csv'\n                >\n                  <CloudDownload /> {market}\n                </CSVLink>\n              })\n            }\n          </Col>\n        </Row>\n        <br />\n        <Table\n          size='small'\n          style={{ minWidth: '1000px' }}\n          pagination={false}\n          rowKey={record => record.category}\n          columns={columns.MarketData}\n          dataSource={this.state.marketData}\n        />\n      </div>\n      }\n    </div>\n  }\n\n  getOhlcvRender () {\n    return <div>\n      {this.state.ready &&\n      <div>\n        <Row justify='center' type='flex'>\n          <Col span={4}><h3>OHLCV</h3></Col>\n          <Col span={20}>\n            <DatePicker format='YYYY/MM/DD' onChange={(d, ds) => this.onSearchByTime(constants.key.ohlcvData, true, ds)} />\n          </Col>\n        </Row>\n        <br />\n        <Row justify='center' type='flex' className='csvBg'>\n          <Col span={2}>\n            CSV Download:\n          </Col>\n          <Col span={20} offset={1}>\n            {\n              Object.keys(this.data.csv.ohlcv).map(quote => {\n                return <CSVLink\n                  key={quote}\n                  filename={'ohlcv-' + quote + '.csv'}\n                  headers={csvHeaders.ohlcvData}\n                  data={this.data.csv.ohlcv[quote]}\n                  className='csv'\n                >\n                  <CloudDownload /> {quote}\n                </CSVLink>\n              })\n            }\n          </Col>\n        </Row>\n        <br />\n        <Table\n          size='small'\n          style={{ minWidth: '1700px' }}\n          pagination={false}\n          rowKey={record => record.unit}\n          columns={columns.Ohlcv}\n          dataSource={this.state.ohlcvData}\n        />\n      </div>\n      }\n    </div>\n  }\n\n  getBalanceRender () {\n    return <div>\n      {this.state.ready &&\n      <div>\n        <Row justify='center' type='flex'>\n          <Col span={4}><h3>Balance</h3></Col>\n          <Col span={20}>\n            <DatePicker format='YYYY/MM/DD' onChange={(d, ds) => this.onSearchByTime(constants.key.balanceData, true, ds)} />\n            {' '}<TimePicker format='HH:mm:ss' onChange={(t, ts) => this.onSearchByTime(constants.key.balanceData, false, ts)} />\n          </Col>\n        </Row>\n        <br />\n        <Row justify='center' type='flex' className='csvBg'>\n          <Col span={2}>\n            CSV Download:\n          </Col>\n          <Col span={20} offset={1}>\n            {this.state.readyBalanceCSV\n              ? Object.keys(this.data.csv.balance).map(quote => {\n                return <CSVLink\n                  key={quote}\n                  filename={'balance-' + quote + '.csv'}\n                  headers={csvHeaders.balanceData}\n                  data={this.data.csv.balance[quote]}\n                  className='csv'\n                >\n                  <CloudDownload /> {quote}\n                </CSVLink>\n              })\n              : <Spin size='default' />\n            }\n          </Col>\n        </Row>\n        <br />\n        <Table\n          size='small'\n          style={{ minWidth: '1000px' }}\n          pagination={false}\n          rowKey={record => record.exchange}\n          columns={columns.Balance}\n          dataSource={this.state.balanceData}\n        />\n      </div>\n      }\n    </div>\n  }\n\n  getChartRender () {\n    return <div>\n      <h3>Chart</h3>\n      {this.state.ready &&\n        <div>\n          <Row style={{ minWidth: '600px' }}>\n            <Col span={23}>\n              <Line\n                data={this.data.chart[constants.target.quotes[0]]}\n                options={lineChartOptions(constants.target.symbol + '/' + constants.target.quotes[0] + ' Price & Volume')}\n              />\n            </Col>\n          </Row>\n          <Row style={{ minWidth: '800px' }}>\n            <Col span={11}>\n              <Line\n                data={this.data.chart['close']}\n                options={lineChartOptions('Weekly close & volume (unit: USD)')}\n              />\n            </Col>\n            <Col span={11} offset={1}>\n              <Bar\n                data={this.data.chart['market']}\n                options={barChartOptions('Weekly market volume (unit: USD)')}\n              />\n            </Col>\n          </Row>\n        </div>\n      }\n    </div>\n  }\n\n  render () {\n    return (\n      <Layout className='layout'>\n        <Layout.Header>\n          Header\n        </Layout.Header>\n        <Layout.Content style={{ padding: '5vh 5vw 0vh 5vw', backgroundColor: '#fff', minHeight: '70vh' }}>\n          {this.state.ready\n            ? <div>\n              {this.getTokenMetricRender()}\n              <br />\n              {this.getMarketDataRender()}\n              <br />\n              {this.getOhlcvRender()}\n              <br />\n              {this.getBalanceRender()}\n              <br />\n              {this.getChartRender()}\n            </div>\n            : <center>\n              <h1>Loading...</h1>\n              <Spin size='large' />\n            </center>\n          }\n        </Layout.Content>\n        <Layout.Footer>\n          <h3>Raw data: <a href={getURL('report')}>Report</a> / <a href={getURL('balance')}>Balance</a> / <a href={getURL('trade')}>Trade</a></h3>\n          <center>coinmarketcap-react-chart ©2018 Created by hexoul</center>\n        </Layout.Footer>\n      </Layout>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}