{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/layout/style\";\nimport _Layout from \"antd/es/layout\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport _regeneratorRuntime from \"/home/nineleaps/coinmarketcap-react-chart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nineleaps/coinmarketcap-react-chart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/nineleaps/coinmarketcap-react-chart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nineleaps/coinmarketcap-react-chart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nineleaps/coinmarketcap-react-chart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nineleaps/coinmarketcap-react-chart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nineleaps/coinmarketcap-react-chart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nineleaps/coinmarketcap-react-chart/src/App.js\";\nimport React from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { CSVLink } from 'react-csv';\nimport { constants, columns, csvHeaders } from './constants';\nimport { getURL, getSource, fmtFloat, lineChartOptions, lineChartWithPriceVolume, lineChartWithCloseVolume, barChartOptions, barChartWithVolumes, getMarketDataCSV, getOhlcvCSV, getBalanceCSV } from './util'; // Styles.\n\nimport './App.css';\nimport { CloudDownload } from '@material-ui/icons';\nimport * as data from './dummy.json';\nvar keyMerged = 'Merged'; // const mockData  = require('./dummy.json');\n\nvar word = data['default']['data']; // var data = require('json!./dummy.json');\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.data = {\n      origin: [],\n      balance: [],\n      trade: [],\n      chart: {},\n      csv: {\n        market: {},\n        ohlcv: {},\n        balance: {}\n      },\n      searchDate: {},\n      searchTime: {}\n    };\n    _this.state = {\n      ready: false,\n      readyBalanceCSV: false,\n      tokenMetric: [],\n      marketData: [],\n      ohlcvData: [],\n      balanceData: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadReport\",\n    value: function () {\n      var _loadReport = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var ret, labels, prices, volumes, cLabel, cClose, cVolume, prevMonday, thisMonday, marketVolumes, tokenMetric, marketData, ohlcvData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.data.origin = [];\n                this.data.chart = {}; // Get source from remote repo\n\n                _context.next = 4;\n                return getSource('report');\n\n              case 4:\n                ret = _context.sent;\n                ret.split('\\n').forEach(function (line) {\n                  if (!line) return;\n\n                  _this2.data.origin.push(JSON.parse(line));\n                });\n\n                if (!(this.data.origin.length === 0)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 8:\n                // Reverse array to descending order for CSV and table\n                this.data.origin.sort(function (a, b) {\n                  return Date.parse(b.time) - Date.parse(a.time);\n                }); // --------------------------------- CSV ---------------------------------//\n                // Construct raw data for CSV of market data\n\n                this.data.csv.market[keyMerged] = [];\n                this.data.csv.market['CMC'] = this.data.origin.filter(function (e) {\n                  return e.msg === constants.gather.cryptoQuote && e.symbol === constants.target.symbol;\n                }).map(function (e) {\n                  e.market = 'CMC';\n                  return getMarketDataCSV(e);\n                });\n                constants.target.markets.forEach(function (market) {\n                  _this2.data.csv.market[market] = _this2.data.origin.filter(function (e) {\n                    return e.msg === constants.gather.marketPairs && e.symbol === constants.target.symbol && e.market === market;\n                  }).map(function (e) {\n                    return getMarketDataCSV(e);\n                  });\n                  _this2.data.csv.market[keyMerged] = _this2.data.csv.market[keyMerged].concat(_this2.data.csv.market[market]);\n                });\n                this.data.csv.market[keyMerged].sort(function (a, b) {\n                  return Date.parse(b.time) - Date.parse(a.time);\n                }); // Construct raw data for CSV of ohlcv\n\n                this.data.csv.ohlcv[keyMerged] = [];\n                constants.target.quotes.forEach(function (quote) {\n                  _this2.data.csv.ohlcv[quote] = _this2.data.origin.filter(function (e) {\n                    return e.msg === constants.gather.ohlcv && e.symbol === constants.target.symbol && e.convert === quote;\n                  }).map(function (e) {\n                    return getOhlcvCSV(e, _this2.data.csv.market);\n                  }).sort(function (a, b) {\n                    return Date.parse(b.date) - Date.parse(a.date);\n                  });\n                  _this2.data.csv.ohlcv[keyMerged] = _this2.data.csv.ohlcv[keyMerged].concat(_this2.data.csv.ohlcv[quote]);\n                });\n                this.data.csv.ohlcv[keyMerged].sort(function (a, b) {\n                  return Date.parse(b.date) - Date.parse(a.date);\n                }); // --------------------------------- Chart ---------------------------------//\n                // Construct raw data for price & volume chart\n\n                labels = {};\n                prices = {};\n                volumes = {};\n                constants.target.quotes.forEach(function (v) {\n                  labels[v] = [];\n                  prices[v] = [];\n                  volumes[v] = [];\n                });\n                this.data.origin.filter(function (e) {\n                  return e.msg === constants.gather.cryptoQuote && e.symbol === constants.target.symbol;\n                }).forEach(function (e) {\n                  constants.target.quotes.forEach(function (v) {\n                    labels[v].push(e.time);\n                    prices[v].push(e.quote[v].price);\n                    volumes[v].push(e.quote[v].volume_24h);\n                  });\n                });\n                constants.target.quotes.forEach(function (v) {\n                  _this2.data.chart[v] = lineChartWithPriceVolume(labels[v], prices[v], volumes[v]);\n                }); // Construct raw data for close chart\n\n                cLabel = [];\n                cClose = [];\n                cVolume = [];\n                prevMonday = new Date();\n                prevMonday.setDate(prevMonday.getDate() - 7 - (prevMonday.getDay() + 6) % 7);\n                prevMonday = new Date(prevMonday.getFullYear(), prevMonday.getMonth(), prevMonday.getDate(), 0, 0, 0);\n                prevMonday.setMinutes(prevMonday.getMinutes() + prevMonday.getTimezoneOffset());\n                thisMonday = new Date();\n                thisMonday.setDate(thisMonday.getDate() - (thisMonday.getDay() + 6) % 7);\n                thisMonday = new Date(thisMonday.getFullYear(), thisMonday.getMonth(), thisMonday.getDate(), 0, 0, 0);\n                thisMonday.setMinutes(thisMonday.getMinutes() + thisMonday.getTimezoneOffset());\n                this.data.origin.filter(function (e) {\n                  return e.msg === constants.gather.ohlcv && Date.parse(e.ctime) >= prevMonday.getTime() && Date.parse(e.ctime) < thisMonday.getTime() && e.symbol === constants.target.symbol && e.convert === 'USD';\n                }).forEach(function (e) {\n                  cLabel.push(e.ctime);\n                  cClose.push(e.quote.close);\n                  cVolume.push(e.quote.volume);\n                });\n                this.data.chart['close'] = lineChartWithCloseVolume(cLabel, cClose, cVolume); // Construct raw data for market volume chart\n\n                marketVolumes = this.data.csv.ohlcv['USD'].filter(function (e) {\n                  return Date.parse(e.ctime) >= prevMonday.getTime() && Date.parse(e.ctime) < thisMonday.getTime();\n                }).reverse();\n                this.data.chart['market'] = barChartWithVolumes(marketVolumes); // --------------------------------- Table ---------------------------------//\n                // Construct raw data for token metric table\n\n                tokenMetric = this.data.origin.filter(function (e) {\n                  return e.msg === constants.gather.tokenMetric && e.symbol === constants.target.symbol;\n                });\n                if (tokenMetric.length > 0) tokenMetric = tokenMetric.slice(0, 1); // Construct raw data for market data table\n\n                marketData = [];\n                Object.keys(this.data.csv.market).filter(function (k) {\n                  return k !== keyMerged;\n                }).forEach(function (k) {\n                  if (_this2.data.csv.market[k].length > 0) marketData.push(_this2.data.csv.market[k][0]);\n                }); // Construct raw data for ohlcv table\n\n                ohlcvData = [];\n                Object.keys(this.data.csv.ohlcv).filter(function (k) {\n                  return k !== keyMerged;\n                }).forEach(function (k) {\n                  if (_this2.data.csv.ohlcv[k].length > 0) ohlcvData.push(_this2.data.csv.ohlcv[k][0]);\n                });\n                this.setState({\n                  tokenMetric: tokenMetric,\n                  marketData: marketData,\n                  ohlcvData: ohlcvData\n                });\n\n              case 44:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadReport() {\n        return _loadReport.apply(this, arguments);\n      }\n\n      return loadReport;\n    }()\n  }, {\n    key: \"loadBalance\",\n    value: function () {\n      var _loadBalance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this3 = this;\n\n        var ret, balanceData;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.data.balance = []; // Get source from remote repo\n\n                _context2.next = 3;\n                return getSource('balance');\n\n              case 3:\n                ret = _context2.sent;\n                ret.split('\\n').forEach(function (line) {\n                  if (!line) return;\n\n                  _this3.data.balance.push(JSON.parse(line));\n                });\n\n                if (!(this.data.balance.length === 0)) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 7:\n                // --------------------------------- CSV ---------------------------------//\n                // Construct raw data for CSV of balance data\n                this.data.csv.balance[keyMerged] = [];\n                constants.target.markets.forEach(function (market) {\n                  _this3.data.csv.balance[market] = _this3.data.balance.filter(function (e) {\n                    return e.msg === constants.gather.balance && e.exchange === market;\n                  }).map(function (e) {\n                    return getBalanceCSV(e);\n                  }).sort(function (a, b) {\n                    return Date.parse(b.time) - Date.parse(a.time);\n                  });\n                  _this3.data.csv.balance[keyMerged] = _this3.data.csv.balance[keyMerged].concat(_this3.data.csv.balance[market]);\n                });\n                this.data.csv.balance[keyMerged].sort(function (a, b) {\n                  return Date.parse(b.time) - Date.parse(a.time);\n                }); // --------------------------------- Table ---------------------------------//\n                // Construct raw data for balance table\n\n                balanceData = [];\n                constants.target.markets.forEach(function (k) {\n                  if (_this3.data.csv.balance[k].length > 0) balanceData.push(_this3.data.csv.balance[k][0]);\n                });\n                this.setState({\n                  balanceData: balanceData\n                });\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBalance() {\n        return _loadBalance.apply(this, arguments);\n      }\n\n      return loadBalance;\n    }()\n  }, {\n    key: \"loadTrade\",\n    value: function () {\n      var _loadTrade = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this4 = this;\n\n        var ret, balanceData;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.data.trade = []; // Get source from remote repo\n\n                _context3.next = 3;\n                return getSource('trade');\n\n              case 3:\n                ret = _context3.sent;\n                ret.split('\\n').forEach(function (line) {\n                  if (!line) return;\n\n                  _this4.data.trade.push(JSON.parse(line));\n                });\n\n                if (!(this.data.trade.length === 0)) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 7:\n                this.data.trade = this.data.trade.filter(function (e) {\n                  return e.msg === constants.gather.trade;\n                }); // --------------------------------- Table ---------------------------------//\n                // Construct raw data for balance table\n\n                balanceData = [];\n                constants.target.markets.forEach(function (k) {\n                  if (_this4.data.csv.balance[k].length === 0) return;\n                  var last = _this4.data.csv.balance[k][0];\n                  var time = new Date(last.time).getTime();\n                  var prev24h = new Date(last.time);\n                  prev24h = prev24h.setDate(prev24h.getDate() - 1);\n                  last.amount = _this4.data.trade.filter(function (e) {\n                    return e.exchange === k && Date.parse(e.createdAt) >= prev24h && Date.parse(e.createdAt) <= time;\n                  }).reduce(function (acc, e) {\n                    return acc + e.amount;\n                  }, 0); // NOTE: DISABLED - Underestimate considering cross trading\n\n                  last.amount = fmtFloat(last.amount);\n                  if (_this4.data.csv.balance[k].length > 0) balanceData.push(last);\n                });\n                this.setState({\n                  balanceData: balanceData\n                });\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadTrade() {\n        return _loadTrade.apply(this, arguments);\n      }\n\n      return loadTrade;\n    }()\n  }, {\n    key: \"calcVolume\",\n    value: function () {\n      var _calcVolume = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var _this5 = this;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                constants.target.markets.forEach(function (k) {\n                  var kTrade = _this5.data.trade.filter(function (e) {\n                    return e.exchange === k;\n                  });\n\n                  var idx = 0;\n\n                  var func = function func() {\n                    var iter = 0;\n\n                    var _loop = function _loop() {\n                      var time = new Date(_this5.data.csv.balance[k][idx].time).getTime();\n                      var prev24h = new Date(_this5.data.csv.balance[k][idx].time);\n                      prev24h = prev24h.setDate(prev24h.getDate() - 1);\n                      _this5.data.csv.balance[k][idx].volume = kTrade.filter(function (e) {\n                        return Date.parse(e.createdAt) >= prev24h && Date.parse(e.createdAt) <= time;\n                      }).reduce(function (acc, e) {\n                        return acc + e.volume;\n                      }, 0); // Underestimate considering cross trading\n\n                      _this5.data.csv.balance[k][idx].volume /= 2;\n                      ++iter;\n                      ++idx;\n                    };\n\n                    while (idx < _this5.data.csv.balance[k].length && iter < 20) {\n                      _loop();\n                    }\n\n                    if (idx < _this5.data.csv.balance[k].length) setTimeout(func, 500);else _this5.setState({\n                      readyBalanceCSV: true\n                    });\n                  };\n\n                  func();\n                });\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function calcVolume() {\n        return _calcVolume.apply(this, arguments);\n      }\n\n      return calcVolume;\n    }()\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this6 = this;\n\n      var asyncLoading = [this.loadReport(), this.loadBalance().then(function () {\n        return _this6.loadTrade();\n      })];\n      Promise.all(asyncLoading).then(function () {\n        return _this6.setState({\n          ready: true\n        }, function () {\n          return _this6.calcVolume();\n        });\n      }); // Load raw data periodically\n      // this.interval = setInterval(() => {\n      //   this.setState({ ready: false });\n      //   Promise.all(asyncLoading).then(() => this.setState({ ready: true }, () => this.calcVolume()));\n      // }, constants.dataUpdatePeriod);\n    }\n  }, {\n    key: \"getMarketDataRender\",\n    value: function getMarketDataRender() {\n      var _this7 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 12\n        }\n      }, this.state.ready && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(_Row, {\n        justify: \"center\",\n        type: \"flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(_Col, {\n        span: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 25\n        }\n      }, \"Market Data\")), /*#__PURE__*/React.createElement(_Col, {\n        span: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_DatePicker, {\n        format: \"YYYY/MM/DD\",\n        onChange: function onChange(d, ds) {\n          return _this7.onSearchByTime(constants.key.marketData, true, ds);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(_Table, {\n        size: \"small\",\n        style: {\n          minWidth: '1000px'\n        },\n        pagination: false,\n        rowKey: function rowKey(record) {\n          return record.category;\n        },\n        columns: columns.MarketData,\n        dataSource: word,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 9\n        }\n      }), console.log(this.state.marketData), console.log(\"ye word hai\", word)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(_Layout, {\n        className: \"layout\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(_Layout.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 9\n        }\n      }, \"Header\"), /*#__PURE__*/React.createElement(_Layout.Content, {\n        style: {\n          padding: '5vh 5vw 0vh 5vw',\n          backgroundColor: '#fff',\n          minHeight: '70vh'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 9\n        }\n      }, this.state.ready ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 15\n        }\n      }, this.getMarketDataRender(), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 15\n        }\n      })) : /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }\n      }, \"Loading...\"), /*#__PURE__*/React.createElement(_Spin, {\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(_Layout.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }\n      }, \"UI creator team TheBigShot\")));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/nineleaps/coinmarketcap-react-chart/src/App.js"],"names":["React","Line","Bar","CSVLink","constants","columns","csvHeaders","getURL","getSource","fmtFloat","lineChartOptions","lineChartWithPriceVolume","lineChartWithCloseVolume","barChartOptions","barChartWithVolumes","getMarketDataCSV","getOhlcvCSV","getBalanceCSV","CloudDownload","data","keyMerged","word","App","origin","balance","trade","chart","csv","market","ohlcv","searchDate","searchTime","state","ready","readyBalanceCSV","tokenMetric","marketData","ohlcvData","balanceData","ret","split","forEach","line","push","JSON","parse","length","sort","a","b","Date","time","filter","e","msg","gather","cryptoQuote","symbol","target","map","markets","marketPairs","concat","quotes","quote","convert","date","labels","prices","volumes","v","price","volume_24h","cLabel","cClose","cVolume","prevMonday","setDate","getDate","getDay","getFullYear","getMonth","setMinutes","getMinutes","getTimezoneOffset","thisMonday","ctime","getTime","close","volume","marketVolumes","reverse","slice","Object","keys","k","setState","exchange","last","prev24h","amount","createdAt","reduce","acc","kTrade","idx","func","iter","setTimeout","asyncLoading","loadReport","loadBalance","then","loadTrade","Promise","all","calcVolume","d","ds","onSearchByTime","key","minWidth","record","category","MarketData","console","log","padding","backgroundColor","minHeight","getMarketDataRender","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Layout, Table, Row, Col, DatePicker, TimePicker, Spin } from 'antd'\nimport { Line, Bar } from 'react-chartjs-2'\nimport { CSVLink } from 'react-csv'\n\nimport { constants, columns, csvHeaders } from './constants'\nimport {\n  getURL, getSource, fmtFloat,\n  lineChartOptions, lineChartWithPriceVolume, lineChartWithCloseVolume,\n  barChartOptions, barChartWithVolumes,\n  getMarketDataCSV, getOhlcvCSV, getBalanceCSV } from './util'\n\n// Styles.\nimport './App.css'\nimport { CloudDownload } from '@material-ui/icons'\nimport * as data from './dummy.json';\nconst keyMerged = 'Merged'\n// const mockData  = require('./dummy.json');\n\nconst word = data['default']['data'];\n\n// var data = require('json!./dummy.json');\nclass App extends React.Component {\n  data = {\n    origin: [],\n    balance: [],\n    trade: [],\n    chart: {},\n    csv: {\n      market: {},\n      ohlcv: {},\n      balance: {}\n    },\n    searchDate: {},\n    searchTime: {}\n  };\n\n  state = {\n    ready: false,\n    readyBalanceCSV: false,\n    tokenMetric: [],\n    marketData: [],\n    ohlcvData: [],\n    balanceData: []\n  };\n\n  async loadReport () {\n    this.data.origin = []\n    this.data.chart = {}\n\n    // Get source from remote repo\n    let ret = await getSource('report')\n    ret.split('\\n').forEach(line => {\n      if (!line) return\n      this.data.origin.push(JSON.parse(line))\n    })\n    if (this.data.origin.length === 0) return\n\n    // Reverse array to descending order for CSV and table\n    this.data.origin.sort((a, b) => Date.parse(b.time) - Date.parse(a.time))\n\n    // --------------------------------- CSV ---------------------------------//\n    // Construct raw data for CSV of market data\n    this.data.csv.market[keyMerged] = []\n    this.data.csv.market['CMC'] = this.data.origin\n      .filter(e => e.msg === constants.gather.cryptoQuote && e.symbol === constants.target.symbol)\n      .map(e => { e.market = 'CMC'; return getMarketDataCSV(e) })\n    constants.target.markets.forEach(market => {\n      this.data.csv.market[market] = this.data.origin\n        .filter(e => e.msg === constants.gather.marketPairs &&\n                e.symbol === constants.target.symbol &&\n                e.market === market)\n        .map(e => getMarketDataCSV(e))\n      this.data.csv.market[keyMerged] = this.data.csv.market[keyMerged].concat(this.data.csv.market[market])\n    })\n    this.data.csv.market[keyMerged].sort((a, b) => Date.parse(b.time) - Date.parse(a.time))\n\n    // Construct raw data for CSV of ohlcv\n    this.data.csv.ohlcv[keyMerged] = []\n    constants.target.quotes.forEach(quote => {\n      this.data.csv.ohlcv[quote] = this.data.origin\n        .filter(e => e.msg === constants.gather.ohlcv &&\n                e.symbol === constants.target.symbol &&\n                e.convert === quote)\n        .map(e => getOhlcvCSV(e, this.data.csv.market))\n        .sort((a, b) => Date.parse(b.date) - Date.parse(a.date))\n      this.data.csv.ohlcv[keyMerged] = this.data.csv.ohlcv[keyMerged].concat(this.data.csv.ohlcv[quote])\n    })\n    this.data.csv.ohlcv[keyMerged].sort((a, b) => Date.parse(b.date) - Date.parse(a.date))\n\n    // --------------------------------- Chart ---------------------------------//\n    // Construct raw data for price & volume chart\n    var labels = {}; var prices = {}; var volumes = {}\n    constants.target.quotes.forEach(v => { labels[v] = []; prices[v] = []; volumes[v] = [] })\n    this.data.origin\n      .filter(e => e.msg === constants.gather.cryptoQuote && e.symbol === constants.target.symbol)\n      .forEach(e => {\n        constants.target.quotes.forEach(v => {\n          labels[v].push(e.time)\n          prices[v].push(e.quote[v].price)\n          volumes[v].push(e.quote[v].volume_24h)\n        })\n      })\n    constants.target.quotes.forEach(v => {\n      this.data.chart[v] = lineChartWithPriceVolume(labels[v], prices[v], volumes[v])\n    })\n\n    // Construct raw data for close chart\n    var cLabel = []; var cClose = []; var cVolume = []\n    var prevMonday = new Date()\n    prevMonday.setDate(prevMonday.getDate() - 7 - (prevMonday.getDay() + 6) % 7)\n    prevMonday = new Date(prevMonday.getFullYear(), prevMonday.getMonth(), prevMonday.getDate(), 0, 0, 0)\n    prevMonday.setMinutes(prevMonday.getMinutes() + prevMonday.getTimezoneOffset())\n    var thisMonday = new Date()\n    thisMonday.setDate(thisMonday.getDate() - (thisMonday.getDay() + 6) % 7)\n    thisMonday = new Date(thisMonday.getFullYear(), thisMonday.getMonth(), thisMonday.getDate(), 0, 0, 0)\n    thisMonday.setMinutes(thisMonday.getMinutes() + thisMonday.getTimezoneOffset())\n    this.data.origin\n      .filter(e => e.msg === constants.gather.ohlcv &&\n              Date.parse(e.ctime) >= prevMonday.getTime() &&\n              Date.parse(e.ctime) < thisMonday.getTime() &&\n              e.symbol === constants.target.symbol &&\n              e.convert === 'USD')\n      .forEach(e => {\n        cLabel.push(e.ctime)\n        cClose.push(e.quote.close)\n        cVolume.push(e.quote.volume)\n      })\n    this.data.chart['close'] = lineChartWithCloseVolume(cLabel, cClose, cVolume)\n\n    // Construct raw data for market volume chart\n    var marketVolumes = this.data.csv.ohlcv['USD']\n      .filter(e => Date.parse(e.ctime) >= prevMonday.getTime() &&\n              Date.parse(e.ctime) < thisMonday.getTime())\n      .reverse()\n    this.data.chart['market'] = barChartWithVolumes(marketVolumes)\n\n    // --------------------------------- Table ---------------------------------//\n    // Construct raw data for token metric table\n    var tokenMetric = this.data.origin.filter(e => e.msg === constants.gather.tokenMetric && e.symbol === constants.target.symbol)\n    if (tokenMetric.length > 0) tokenMetric = tokenMetric.slice(0, 1)\n\n    // Construct raw data for market data table\n    var marketData = []\n    Object.keys(this.data.csv.market).filter(k => k !== keyMerged).forEach(k => {\n      if (this.data.csv.market[k].length > 0) marketData.push(this.data.csv.market[k][0])\n    })\n\n    // Construct raw data for ohlcv table\n    var ohlcvData = []\n    Object.keys(this.data.csv.ohlcv).filter(k => k !== keyMerged).forEach(k => {\n      if (this.data.csv.ohlcv[k].length > 0) ohlcvData.push(this.data.csv.ohlcv[k][0])\n    })\n\n    this.setState({ tokenMetric: tokenMetric, marketData: marketData, ohlcvData: ohlcvData })\n  }\n\n  async loadBalance () {\n    this.data.balance = []\n\n    // Get source from remote repo\n    let ret = await getSource('balance')\n    ret.split('\\n').forEach(line => {\n      if (!line) return\n      this.data.balance.push(JSON.parse(line))\n    })\n    if (this.data.balance.length === 0) return\n\n    // --------------------------------- CSV ---------------------------------//\n    // Construct raw data for CSV of balance data\n    this.data.csv.balance[keyMerged] = []\n    constants.target.markets.forEach(market => {\n      this.data.csv.balance[market] = this.data.balance\n        .filter(e => e.msg === constants.gather.balance &&\n                e.exchange === market)\n        .map(e => getBalanceCSV(e))\n        .sort((a, b) => Date.parse(b.time) - Date.parse(a.time))\n      this.data.csv.balance[keyMerged] = this.data.csv.balance[keyMerged].concat(this.data.csv.balance[market])\n    })\n    this.data.csv.balance[keyMerged].sort((a, b) => Date.parse(b.time) - Date.parse(a.time))\n\n    // --------------------------------- Table ---------------------------------//\n    // Construct raw data for balance table\n    var balanceData = []\n    constants.target.markets.forEach(k => {\n      if (this.data.csv.balance[k].length > 0) balanceData.push(this.data.csv.balance[k][0])\n    })\n\n    this.setState({ balanceData: balanceData })\n  }\n\n  async loadTrade () {\n    this.data.trade = []\n\n    // Get source from remote repo\n    let ret = await getSource('trade')\n    ret.split('\\n').forEach(line => {\n      if (!line) return\n      this.data.trade.push(JSON.parse(line))\n    })\n    if (this.data.trade.length === 0) return\n\n    this.data.trade = this.data.trade.filter(e => e.msg === constants.gather.trade)\n\n    // --------------------------------- Table ---------------------------------//\n    // Construct raw data for balance table\n    var balanceData = []\n    constants.target.markets.forEach(k => {\n      if (this.data.csv.balance[k].length === 0) return\n      let last = this.data.csv.balance[k][0]\n      let time = new Date(last.time).getTime()\n      let prev24h = new Date(last.time)\n      prev24h = prev24h.setDate(prev24h.getDate() - 1)\n      last.amount = this.data.trade\n        .filter(e => e.exchange === k &&\n                            Date.parse(e.createdAt) >= prev24h &&\n                            Date.parse(e.createdAt) <= time)\n        .reduce((acc, e) => acc + e.amount, 0)\n      // NOTE: DISABLED - Underestimate considering cross trading\n      last.amount = fmtFloat(last.amount)\n      if (this.data.csv.balance[k].length > 0) balanceData.push(last)\n    })\n\n    this.setState({ balanceData: balanceData })\n  }\n\n  async calcVolume () {\n    constants.target.markets.forEach(k => {\n      var kTrade = this.data.trade.filter(e => e.exchange === k)\n      var idx = 0\n      var func = () => {\n        let iter = 0\n        while (idx < this.data.csv.balance[k].length && iter < 20) {\n          let time = new Date(this.data.csv.balance[k][idx].time).getTime()\n          let prev24h = new Date(this.data.csv.balance[k][idx].time)\n          prev24h = prev24h.setDate(prev24h.getDate() - 1)\n          this.data.csv.balance[k][idx].volume = kTrade\n            .filter(e => Date.parse(e.createdAt) >= prev24h &&\n                              Date.parse(e.createdAt) <= time)\n            .reduce((acc, e) => acc + e.volume, 0)\n          // Underestimate considering cross trading\n          this.data.csv.balance[k][idx].volume /= 2\n          ++iter\n          ++idx\n        }\n        if (idx < this.data.csv.balance[k].length) setTimeout(func, 500)\n        else this.setState({ readyBalanceCSV: true })\n      }\n      func()\n    })\n  }\n\n  componentWillMount () {\n    var asyncLoading = [this.loadReport(), this.loadBalance().then(() => this.loadTrade())]\n    Promise.all(asyncLoading).then(() => this.setState({ ready: true }, () => this.calcVolume()))\n\n    // Load raw data periodically\n\n    // this.interval = setInterval(() => {\n    //   this.setState({ ready: false });\n    //   Promise.all(asyncLoading).then(() => this.setState({ ready: true }, () => this.calcVolume()));\n    // }, constants.dataUpdatePeriod);\n  }\n\n  getMarketDataRender () {\n    return <div>\n      {this.state.ready &&\n      <div>\n        <Row justify='center' type='flex'>\n          <Col span={4}><h3>Market Data</h3></Col>\n          <Col span={20}>\n            <DatePicker format='YYYY/MM/DD' onChange={(d, ds) => this.onSearchByTime(constants.key.marketData, true, ds)} />\n          </Col>\n        </Row>\n        <br />\n        <Table\n          size='small'\n          style={{ minWidth: '1000px' }}\n          pagination={false}\n          rowKey={record => record.category}\n          columns={columns.MarketData}\n          dataSource={word}\n        />\n        {console.log(this.state.marketData)}\n        {console.log(\"ye word hai\",word)}\n        \n        \n      </div>\n      }\n    </div>\n  }\n\n \n\n  render () {\n    return (\n      <Layout className='layout'>\n        <Layout.Header>\n          Header\n        </Layout.Header>\n        <Layout.Content style={{ padding: '5vh 5vw 0vh 5vw', backgroundColor: '#fff', minHeight: '70vh' }}>\n          {this.state.ready\n            ? <div>\n              {/* {this.getTokenMetricRender()}\n              <br /> */}\n              {this.getMarketDataRender()}\n              <br />\n              {/* {this.getOhlcvRender()}\n              <br />\n              {this.getBalanceRender()}\n              <br />\n              {this.getChartRender()} */}\n            </div>\n            : <center>\n              <h1>Loading...</h1>\n              <Spin size='large' />\n            </center>\n          }\n        </Layout.Content>\n        <Layout.Footer>\n          {/* <h3>Raw data: <a href={getURL('report')}>Report</a> / <a href={getURL('balance')}>Balance</a> / <a href={getURL('trade')}>Trade</a></h3> */}\n          <center>UI creator team TheBigShot</center>\n        </Layout.Footer>\n      </Layout>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}